{
    "project": {
        "name": "Catan",
        "description": "Package for the Catan client (front-end only)",
        "version": "0.0.1"
    },
    "files": {
        "src/js/controllers/BasicController.js": {
            "name": "src/js/controllers/BasicController.js",
            "modules": {},
            "classes": {
                "misc.BaseController": 1
            },
            "fors": {},
            "namespaces": {
                "misc": 1
            }
        },
        "src/js/controllers/CardController.js": {
            "name": "src/js/controllers/CardController.js",
            "modules": {},
            "classes": {
                "devCards.DevCardController": 1
            },
            "fors": {},
            "namespaces": {
                "devCards": 1
            }
        },
        "src/js/controllers/CommController.js": {
            "name": "src/js/controllers/CommController.js",
            "modules": {},
            "classes": {
                "comm.BaseCommController": 1,
                "comm.LogController": 1,
                "comm.ChatController": 1
            },
            "fors": {},
            "namespaces": {
                "comm": 1
            }
        },
        "src/js/controllers/DiscardController.js": {
            "name": "src/js/controllers/DiscardController.js",
            "modules": {},
            "classes": {
                "discard.DiscardController": 1
            },
            "fors": {},
            "namespaces": {
                "discard": 1
            }
        },
        "src/js/controllers/DomesticController.js": {
            "name": "src/js/controllers/DomesticController.js",
            "modules": {
                "catan.trade.domestic": 1
            },
            "classes": {
                "domestic.DomesticController": 1
            },
            "fors": {},
            "namespaces": {
                "domestic": 1
            }
        },
        "src/js/controllers/MapController.js": {
            "name": "src/js/controllers/MapController.js",
            "modules": {},
            "classes": {
                "map.MapController": 1
            },
            "fors": {},
            "namespaces": {
                "map": 1
            }
        },
        "src/js/controllers/MaritimeController.js": {
            "name": "src/js/controllers/MaritimeController.js",
            "modules": {
                "catan.trade.maritime": 1
            },
            "classes": {
                "maritime.MaritimeController": 1
            },
            "fors": {},
            "namespaces": {
                "maritime": 1
            }
        },
        "src/js/controllers/PointsController.js": {
            "name": "src/js/controllers/PointsController.js",
            "modules": {},
            "classes": {
                "points.PointController": 1
            },
            "fors": {},
            "namespaces": {
                "points": 1
            }
        },
        "src/js/controllers/ResourcesController.js": {
            "name": "src/js/controllers/ResourcesController.js",
            "modules": {},
            "classes": {
                "resources.ResourceBarController": 1
            },
            "fors": {},
            "namespaces": {
                "resources": 1
            }
        },
        "src/js/controllers/RollController.js": {
            "name": "src/js/controllers/RollController.js",
            "modules": {},
            "classes": {
                "roll.RollController": 1
            },
            "fors": {},
            "namespaces": {
                "roll": 1
            }
        },
        "src/js/controllers/SetupRoundController.js": {
            "name": "src/js/controllers/SetupRoundController.js",
            "modules": {
                "catan.setup": 1
            },
            "classes": {
                "setup.SetupRoundController": 1
            },
            "fors": {},
            "namespaces": {
                "setup": 1
            }
        },
        "src/js/controllers/TrackerController.js": {
            "name": "src/js/controllers/TrackerController.js",
            "modules": {},
            "classes": {
                "turntracker.TurnTrackerController": 1
            },
            "fors": {},
            "namespaces": {
                "turntracker": 1
            }
        },
        "src/js/model/board/map/Edge.js": {
            "name": "src/js/model/board/map/Edge.js",
            "modules": {
                "catan.model.board.map": 1
            },
            "classes": {
                "model.Edge": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/board/map/Hex.js": {
            "name": "src/js/model/board/map/Hex.js",
            "modules": {},
            "classes": {
                "model.Hex": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/board/map/Map.js": {
            "name": "src/js/model/board/map/Map.js",
            "modules": {},
            "classes": {
                "model.Map": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/board/map/NumberTiles.js": {
            "name": "src/js/model/board/map/NumberTiles.js",
            "modules": {},
            "classes": {
                "model.NumberTiles": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/board/map/Numbers.js": {
            "name": "src/js/model/board/map/Numbers.js",
            "modules": {},
            "classes": {
                "model.Numbers": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/board/map/Port.js": {
            "name": "src/js/model/board/map/Port.js",
            "modules": {},
            "classes": {
                "model.Port": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/board/map/Vertex.js": {
            "name": "src/js/model/board/map/Vertex.js",
            "modules": {},
            "classes": {
                "model.Vertex": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/board/map/hexgrid_impl.js": {
            "name": "src/js/model/board/map/hexgrid_impl.js",
            "modules": {},
            "classes": {
                "models.CatanEdge": 1,
                "models.CatanVertex": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            }
        },
        "src/js/model/board/Bank.js": {
            "name": "src/js/model/board/Bank.js",
            "modules": {
                "catan.model.board": 1
            },
            "classes": {
                "board.Bank": 1
            },
            "fors": {},
            "namespaces": {
                "board": 1
            }
        },
        "src/js/model/board/Deck.js": {
            "name": "src/js/model/board/Deck.js",
            "modules": {},
            "classes": {
                "model.Deck": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/board/GameBoard.js": {
            "name": "src/js/model/board/GameBoard.js",
            "modules": {},
            "classes": {
                "model.GameBoard": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/js/model/board/Player.js": {
            "name": "src/js/model/board/Player.js",
            "modules": {},
            "classes": {
                "board.Player": 1
            },
            "fors": {},
            "namespaces": {
                "board": 1
            }
        },
        "src/js/model/board/TurnTraker.js": {
            "name": "src/js/model/board/TurnTraker.js",
            "modules": {},
            "classes": {
                "model.TurnTracker": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/Chat.js": {
            "name": "src/js/model/Chat.js",
            "modules": {
                "catan.model": 1
            },
            "classes": {
                "model.Chat": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/GameRoom.js": {
            "name": "src/js/model/GameRoom.js",
            "modules": {},
            "classes": {
                "model.GameRoom": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/GameTable.js": {
            "name": "src/js/model/GameTable.js",
            "modules": {},
            "classes": {
                "model.GameTable": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/Log.js": {
            "name": "src/js/model/Log.js",
            "modules": {},
            "classes": {
                "model.Log": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/Proxy.js": {
            "name": "src/js/model/Proxy.js",
            "modules": {},
            "classes": {
                "model.Proxy": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "src/js/model/clientmodel.js": {
            "name": "src/js/model/clientmodel.js",
            "modules": {
                "catan.models": 1
            },
            "classes": {
                "models.ClientModel": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/comms_box/CommView.js": {
            "name": "node_modules/byu-catan/gameplay/js/comms_box/CommView.js",
            "modules": {
                "catan.comm": 1
            },
            "classes": {
                "comm.BaseCommView": 1,
                "comm.LogView": 1,
                "comm.ChatView": 1
            },
            "fors": {},
            "namespaces": {
                "comm": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/development_cards/BuyOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/development_cards/BuyOverlay.js",
            "modules": {
                "catan.devCards": 1
            },
            "classes": {
                "devCards.BuyCardView": 1
            },
            "fors": {},
            "namespaces": {
                "devCards": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/development_cards/CardOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/development_cards/CardOverlay.js",
            "modules": {},
            "classes": {
                "devCards.DevCardView": 1
            },
            "fors": {},
            "namespaces": {
                "devCards": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js",
            "modules": {
                "catan.discard": 1
            },
            "classes": {
                "discard.DiscardView": 1
            },
            "fors": {},
            "namespaces": {
                "discard": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/map/MapOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/map/MapOverlay.js",
            "modules": {
                "catan.map": 1
            },
            "classes": {
                "map.MapOverlay": 1
            },
            "fors": {},
            "namespaces": {
                "map": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/map/MapView.js": {
            "name": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "modules": {},
            "classes": {
                "map.Point": 1,
                "map.VertexLoc": 1,
                "map.EdgeLoc": 1,
                "map.PortLoc": 1,
                "map.MapView": 1
            },
            "fors": {},
            "namespaces": {
                "map": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/map/RobberOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/map/RobberOverlay.js",
            "modules": {},
            "classes": {
                "map.RobberOverlay": 1
            },
            "fors": {},
            "namespaces": {
                "map": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/model/hexgrid.js": {
            "name": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "modules": {
                "catan.models.hexgrid": 1
            },
            "classes": {
                "hexgrid.BasicHex": 1,
                "hexgrid.EdgeDirection": 1,
                "hexgrid.HexDirection": 1,
                "hexgrid.VertexDirection": 1,
                "hexgrid.HexGrid": 1,
                "hexgrid.HexLocation": 1,
                "hexgrid.BaseLocation": 1,
                "hexgrid.EdgeLocation": 1,
                "hexgrid.VertexLocation": 1,
                "hexgrid.BaseContainer": 1
            },
            "fors": {},
            "namespaces": {
                "hexgrid": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/points/GameOverOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/points/GameOverOverlay.js",
            "modules": {},
            "classes": {
                "misc.GameFinishedView": 1
            },
            "fors": {},
            "namespaces": {
                "misc": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/points/PointsView.js": {
            "name": "node_modules/byu-catan/gameplay/js/points/PointsView.js",
            "modules": {
                "catan.points": 1
            },
            "classes": {
                "points.PointView": 1
            },
            "fors": {},
            "namespaces": {
                "points": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/resources/ResourcesView.js": {
            "name": "node_modules/byu-catan/gameplay/js/resources/ResourcesView.js",
            "modules": {
                "catan.resources": 1
            },
            "classes": {
                "resources.ResourceBarView": 1
            },
            "fors": {},
            "namespaces": {
                "resources": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/roll/RollOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/roll/RollOverlay.js",
            "modules": {
                "catan.roll": 1
            },
            "classes": {
                "roll.RollView": 1
            },
            "fors": {},
            "namespaces": {
                "roll": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/roll/RollResultOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/roll/RollResultOverlay.js",
            "modules": {},
            "classes": {
                "roll.RollResultView": 1
            },
            "fors": {},
            "namespaces": {
                "roll": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/trading/AcceptOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/trading/AcceptOverlay.js",
            "modules": {},
            "classes": {
                "domestic.AcceptView": 1
            },
            "fors": {},
            "namespaces": {
                "domestic": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/trading/DomesticView.js": {
            "name": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "modules": {},
            "classes": {
                "domestic.DomesticView": 1
            },
            "fors": {},
            "namespaces": {
                "domestic": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js": {
            "name": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "modules": {},
            "classes": {
                "maritime.MaritimeView": 1
            },
            "fors": {},
            "namespaces": {
                "maritime": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/turn_tracker/TrackerView.js": {
            "name": "node_modules/byu-catan/gameplay/js/turn_tracker/TrackerView.js",
            "modules": {
                "catan.turntracker": 1
            },
            "classes": {
                "turntracker.TurnTrackerView": 1
            },
            "fors": {},
            "namespaces": {
                "turntracker": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/view_basics/BasicOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/view_basics/BasicOverlay.js",
            "modules": {
                "catan.misc": 1
            },
            "classes": {
                "misc.BaseOverlay": 1
            },
            "fors": {},
            "namespaces": {
                "misc": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/view_basics/WaitOverlay.js": {
            "name": "node_modules/byu-catan/gameplay/js/view_basics/WaitOverlay.js",
            "modules": {},
            "classes": {
                "misc.WaitOverlay": 1
            },
            "fors": {},
            "namespaces": {
                "misc": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/Core.js": {
            "name": "node_modules/byu-catan/gameplay/js/Core.js",
            "modules": {
                "core": 1
            },
            "classes": {
                "core.Core": 1
            },
            "fors": {},
            "namespaces": {
                "core": 1
            }
        },
        "node_modules/byu-catan/gameplay/js/StudentDefinitions.js": {
            "name": "node_modules/byu-catan/gameplay/js/StudentDefinitions.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "catan.misc": {
            "name": "catan.misc",
            "submodules": {},
            "classes": {
                "misc.BaseController": 1,
                "misc.GameFinishedView": 1,
                "misc.BaseOverlay": 1,
                "misc.WaitOverlay": 1
            },
            "fors": {},
            "namespaces": {
                "misc": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/view_basics/WaitOverlay.js",
            "line": 16,
            "description": "This is the namespace to hold the base classes"
        },
        "catan.devCards": {
            "name": "catan.devCards",
            "submodules": {},
            "classes": {
                "devCards.DevCardController": 1,
                "devCards.BuyCardView": 1,
                "devCards.DevCardView": 1
            },
            "fors": {},
            "namespaces": {
                "devCards": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/development_cards/CardOverlay.js",
            "line": 26,
            "description": "This is the namespace for development cards"
        },
        "catan.comm": {
            "name": "catan.comm",
            "submodules": {},
            "classes": {
                "comm.BaseCommController": 1,
                "comm.LogController": 1,
                "comm.ChatController": 1,
                "comm.BaseCommView": 1,
                "comm.LogView": 1,
                "comm.ChatView": 1
            },
            "fors": {},
            "namespaces": {
                "comm": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/comms_box/CommView.js",
            "line": 126,
            "description": "This is the namespace for the communication classes (log and chat)"
        },
        "catan.discard": {
            "name": "catan.discard",
            "submodules": {},
            "classes": {
                "discard.DiscardController": 1,
                "discard.DiscardView": 1
            },
            "fors": {},
            "namespaces": {
                "discard": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js",
            "line": 19,
            "description": "This is the namespace for discarding cards"
        },
        "catan.trade": {
            "name": "catan.trade",
            "submodules": {
                "catan.trade.domestic": 1,
                "catan.trade.maritime": 1
            },
            "classes": {
                "domestic.DomesticController": 1,
                "maritime.MaritimeController": 1,
                "domestic.AcceptView": 1,
                "domestic.DomesticView": 1,
                "maritime.MaritimeView": 1
            },
            "fors": {},
            "namespaces": {
                "domestic": 1,
                "maritime": 1
            },
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 26
        },
        "catan.trade.domestic": {
            "name": "catan.trade.domestic",
            "submodules": {},
            "classes": {
                "domestic.DomesticController": 1,
                "domestic.AcceptView": 1,
                "domestic.DomesticView": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "domestic": 1
            },
            "module": "catan.trade",
            "namespace": "",
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 26,
            "description": "This is the namespace for domestic trading"
        },
        "catan.map": {
            "name": "catan.map",
            "submodules": {},
            "classes": {
                "map.MapController": 1,
                "map.MapOverlay": 1,
                "map.Point": 1,
                "map.VertexLoc": 1,
                "map.EdgeLoc": 1,
                "map.PortLoc": 1,
                "map.MapView": 1,
                "map.RobberOverlay": 1
            },
            "fors": {},
            "namespaces": {
                "map": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/map/RobberOverlay.js",
            "line": 23,
            "description": "This this contains interfaces used by the map and robber views"
        },
        "catan.trade.maritime": {
            "name": "catan.trade.maritime",
            "submodules": {},
            "classes": {
                "maritime.MaritimeController": 1,
                "maritime.MaritimeView": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "maritime": 1
            },
            "module": "catan.trade",
            "namespace": "",
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 26,
            "description": "This is the namespace for maritime trading"
        },
        "catan.points": {
            "name": "catan.points",
            "submodules": {},
            "classes": {
                "points.PointController": 1,
                "points.PointView": 1
            },
            "fors": {},
            "namespaces": {
                "points": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/points/PointsView.js",
            "line": 19,
            "description": "This is the namespace for point display"
        },
        "catan.resources": {
            "name": "catan.resources",
            "submodules": {},
            "classes": {
                "resources.ResourceBarController": 1,
                "resources.ResourceBarView": 1
            },
            "fors": {},
            "namespaces": {
                "resources": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/resources/ResourcesView.js",
            "line": 25,
            "description": "This is the namespace for resources"
        },
        "catan.roll": {
            "name": "catan.roll",
            "submodules": {},
            "classes": {
                "roll.RollController": 1,
                "roll.RollView": 1,
                "roll.RollResultView": 1
            },
            "fors": {},
            "namespaces": {
                "roll": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/roll/RollResultOverlay.js",
            "line": 23,
            "description": "This is the namespace the rolling interface"
        },
        "catan.setup": {
            "name": "catan.setup",
            "submodules": {},
            "classes": {
                "setup.SetupRoundController": 1
            },
            "fors": {},
            "namespaces": {
                "setup": 1
            },
            "tag": "module",
            "file": "src/js/controllers/SetupRoundController.js",
            "line": 15,
            "description": "This is the namespace for the intitial game round"
        },
        "catan.turntracker": {
            "name": "catan.turntracker",
            "submodules": {},
            "classes": {
                "turntracker.TurnTrackerController": 1,
                "turntracker.TurnTrackerView": 1
            },
            "fors": {},
            "namespaces": {
                "turntracker": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/turn_tracker/TrackerView.js",
            "line": 20,
            "description": "The namespace for the turn tracker"
        },
        "catan.model.board.map": {
            "name": "catan.model.board.map",
            "submodules": {},
            "classes": {
                "model.Edge": 1,
                "model.Hex": 1,
                "model.Map": 1,
                "model.NumberTiles": 1,
                "model.Numbers": 1,
                "model.Port": 1,
                "model.Vertex": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            },
            "tag": "module",
            "file": "src/js/model/board/map/Vertex.js",
            "line": 11,
            "description": "Hex edge class"
        },
        "catan.models": {
            "name": "catan.models",
            "submodules": {
                "catan.models.hexgrid": 1
            },
            "classes": {
                "models.CatanEdge": 1,
                "models.CatanVertex": 1,
                "models.ClientModel": 1,
                "hexgrid.BasicHex": 1,
                "hexgrid.EdgeDirection": 1,
                "hexgrid.HexDirection": 1,
                "hexgrid.VertexDirection": 1,
                "hexgrid.HexGrid": 1,
                "hexgrid.HexLocation": 1,
                "hexgrid.BaseLocation": 1,
                "hexgrid.EdgeLocation": 1,
                "hexgrid.VertexLocation": 1,
                "hexgrid.BaseContainer": 1
            },
            "fors": {},
            "namespaces": {
                "models": 1,
                "hexgrid": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 678,
            "description": "This module contains the top-level client model class"
        },
        "catan.model.board": {
            "name": "catan.model.board",
            "submodules": {},
            "classes": {
                "board.Bank": 1,
                "model.Deck": 1,
                "model.GameBoard": 1,
                "board.Player": 1,
                "model.TurnTracker": 1
            },
            "fors": {},
            "namespaces": {
                "board": 1,
                "model": 1
            },
            "tag": "module",
            "file": "src/js/model/board/TurnTraker.js",
            "line": 11
        },
        "catan.model": {
            "name": "catan.model",
            "submodules": {},
            "classes": {
                "model.Chat": 1,
                "model.GameRoom": 1,
                "model.GameTable": 1,
                "model.Log": 1,
                "model.Proxy": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            },
            "tag": "module",
            "file": "src/js/model/Proxy.js",
            "line": 9
        },
        "catan.models.hexgrid": {
            "name": "catan.models.hexgrid",
            "submodules": {},
            "classes": {
                "hexgrid.BasicHex": 1,
                "hexgrid.EdgeDirection": 1,
                "hexgrid.HexDirection": 1,
                "hexgrid.VertexDirection": 1,
                "hexgrid.HexGrid": 1,
                "hexgrid.HexLocation": 1,
                "hexgrid.BaseLocation": 1,
                "hexgrid.EdgeLocation": 1,
                "hexgrid.VertexLocation": 1,
                "hexgrid.BaseContainer": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "hexgrid": 1
            },
            "module": "catan.models",
            "namespace": "",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 678,
            "description": "This is the namespace for what abstracts the hex grid interface:\n\tlocations, the hex grid, directions and a basic hex class"
        },
        "core": {
            "name": "core",
            "submodules": {},
            "classes": {
                "core.Core": 1
            },
            "fors": {},
            "namespaces": {
                "core": 1
            },
            "tag": "module",
            "file": "node_modules/byu-catan/gameplay/js/Core.js",
            "line": 9,
            "description": "These functions are in the default namespace and provide core functionality such as inheritance."
        }
    },
    "classes": {
        "misc.BaseController": {
            "name": "misc.BaseController",
            "shortname": "BaseController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.misc",
            "namespace": "misc",
            "file": "src/js/controllers/BasicController.js",
            "line": 13,
            "description": "This class serves as the basis for all controller classes.\t\t\nThis constructor should be called by all child classes.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "view",
                    "description": "- The controller's view"
                },
                {
                    "name": "clientModel",
                    "description": "- The controller's client model",
                    "type": "models.ClientModel"
                }
            ]
        },
        "devCards.DevCardController": {
            "name": "devCards.DevCardController",
            "shortname": "DevCardController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.devCards",
            "namespace": "devCards",
            "file": "src/js/controllers/CardController.js",
            "line": 22,
            "is_constructor": 1,
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "devCards.DevCardView"
                },
                {
                    "name": "buyView",
                    "description": "",
                    "type": "devCards.BuyCardView"
                },
                {
                    "name": "clientModel",
                    "description": "",
                    "type": "models.ClientModel"
                },
                {
                    "name": "soldierAction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "roadAction",
                    "description": "",
                    "type": "Function"
                }
            ]
        },
        "comm.BaseCommController": {
            "name": "comm.BaseCommController",
            "shortname": "BaseCommController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.comm",
            "namespace": "comm",
            "file": "src/js/controllers/CommController.js",
            "line": 15,
            "description": "The basic controller class to extend from",
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "logView",
                    "description": "The view for this object to control.",
                    "type": "comm.BaseCommView"
                },
                {
                    "name": "model",
                    "description": "The view for this object to control.",
                    "type": "models.ClientModel"
                }
            ],
            "is_constructor": 1
        },
        "comm.LogController": {
            "name": "comm.LogController",
            "shortname": "LogController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.comm",
            "namespace": "comm",
            "file": "src/js/controllers/CommController.js",
            "line": 41,
            "description": "The controller class for the Log",
            "is_constructor": 1,
            "extends": "comm.BaseCommController",
            "params": [
                {
                    "name": "logView",
                    "description": "The view for this object to control.",
                    "type": "comm.LogView"
                },
                {
                    "name": "model",
                    "description": "The view for this object to control.",
                    "type": "models.ClientModel"
                }
            ]
        },
        "comm.ChatController": {
            "name": "comm.ChatController",
            "shortname": "ChatController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.comm",
            "namespace": "comm",
            "file": "src/js/controllers/CommController.js",
            "line": 62,
            "description": "The controller class for the Chat",
            "is_constructor": 1,
            "extends": "comm.BaseCommController",
            "params": [
                {
                    "name": "logView",
                    "description": "The view for this object to control.",
                    "type": "comm.ChatView"
                },
                {
                    "name": "model",
                    "description": "The view for this object to control.",
                    "type": "comm.ClientModel"
                }
            ]
        },
        "discard.DiscardController": {
            "name": "discard.DiscardController",
            "shortname": "DiscardController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.discard",
            "namespace": "discard",
            "file": "src/js/controllers/DiscardController.js",
            "line": 18,
            "is_constructor": 1,
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "discard.DiscardView"
                },
                {
                    "name": "waitingView",
                    "description": "",
                    "type": "misc.WaitOverlay"
                },
                {
                    "name": "clientModel",
                    "description": "",
                    "type": "models.ClientModel"
                }
            ]
        },
        "domestic.DomesticController": {
            "name": "domestic.DomesticController",
            "shortname": "DomesticController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic",
            "file": "src/js/controllers/DomesticController.js",
            "line": 21,
            "is_constructor": 1,
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "domestic.View"
                },
                {
                    "name": "waitingView",
                    "description": "",
                    "type": "misc.WaitOverlay"
                },
                {
                    "name": "acceptView",
                    "description": "",
                    "type": "domestic.AcceptView"
                },
                {
                    "name": "clientModel",
                    "description": "",
                    "type": "models.ClientModel"
                }
            ]
        },
        "map.MapController": {
            "name": "map.MapController",
            "shortname": "MapController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.map",
            "namespace": "map",
            "file": "src/js/controllers/MapController.js",
            "line": 30,
            "is_constructor": 1,
            "params": [
                {
                    "name": "view",
                    "description": "- The initialized map view",
                    "type": "MapView"
                },
                {
                    "name": "modalView",
                    "description": "- The overlay to use for placing items on the board.",
                    "type": "MapOverlay"
                },
                {
                    "name": "model",
                    "description": "- The client model",
                    "type": "ClientModel"
                },
                {
                    "name": "robView",
                    "description": "- The robber overlay to be used when the robber is being placed.  This is undefined for the setup round.",
                    "type": "RobberOverlay"
                }
            ]
        },
        "maritime.MaritimeController": {
            "name": "maritime.MaritimeController",
            "shortname": "MaritimeController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime",
            "file": "src/js/controllers/MaritimeController.js",
            "line": 22,
            "is_constructor": 1,
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "maritime.View"
                },
                {
                    "name": "clientModel",
                    "description": "",
                    "type": "models.ClientModel"
                }
            ]
        },
        "points.PointController": {
            "name": "points.PointController",
            "shortname": "PointController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.points",
            "namespace": "points",
            "file": "src/js/controllers/PointsController.js",
            "line": 20,
            "is_constructor": 1,
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "points.View"
                },
                {
                    "name": "gameFinishedView",
                    "description": "",
                    "type": "misc.GameFinishedView"
                },
                {
                    "name": "clientModel",
                    "description": "",
                    "type": "models.ClientModel"
                }
            ]
        },
        "resources.ResourceBarController": {
            "name": "resources.ResourceBarController",
            "shortname": "ResourceBarController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.resources",
            "namespace": "resources",
            "file": "src/js/controllers/ResourcesController.js",
            "line": 28,
            "description": "Controller class for the Resources View.",
            "is_constructor": 1,
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "view",
                    "description": "The resource view",
                    "type": "resources.View"
                },
                {
                    "name": "clientModel",
                    "description": "The client model",
                    "type": "models.ClientModel"
                },
                {
                    "name": "actions",
                    "description": "The actions to take for each user input. The value of actions.elem_name is a function that is called when the specific element is selected (accessed by calling actions[\"elem_name\"]).  The valid element names are defined in StudentDefinitions.js",
                    "type": "Object"
                }
            ]
        },
        "roll.RollController": {
            "name": "roll.RollController",
            "shortname": "RollController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.roll",
            "namespace": "roll",
            "file": "src/js/controllers/RollController.js",
            "line": 15,
            "is_constructor": 1,
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "roll.View"
                },
                {
                    "name": "resultView",
                    "description": "",
                    "type": "roll.ResultView"
                },
                {
                    "name": "clientModel",
                    "description": "",
                    "type": "models.ClientModel"
                }
            ]
        },
        "setup.SetupRoundController": {
            "name": "setup.SetupRoundController",
            "shortname": "SetupRoundController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.setup",
            "namespace": "setup",
            "file": "src/js/controllers/SetupRoundController.js",
            "line": 15,
            "is_constructor": 1,
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "clientModel",
                    "description": "",
                    "type": "models.ClientModel"
                },
                {
                    "name": "mapController",
                    "description": "",
                    "type": "map.MapController"
                }
            ]
        },
        "turntracker.TurnTrackerController": {
            "name": "turntracker.TurnTrackerController",
            "shortname": "TurnTrackerController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.turntracker",
            "namespace": "turntracker",
            "file": "src/js/controllers/TrackerController.js",
            "line": 16,
            "description": "The controller class for the Turn Tracker",
            "extends": "misc.BaseController",
            "params": [
                {
                    "name": "view",
                    "description": "The view for this object to control.",
                    "type": "turntracker.View"
                },
                {
                    "name": "clientModel",
                    "description": "The clientModel for this object to control.",
                    "type": "models.ClientModel"
                }
            ],
            "is_constructor": 1
        },
        "model.Edge": {
            "name": "model.Edge",
            "shortname": "Edge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board.map",
            "namespace": "model",
            "file": "src/js/model/board/map/Edge.js",
            "line": 11,
            "description": "<pre>\nInvariant: \n</pre>",
            "params": [
                {
                    "name": "direction",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "data",
                    "description": "json data",
                    "type": "JSON"
                }
            ],
            "is_constructor": 1
        },
        "model.Hex": {
            "name": "model.Hex",
            "shortname": "Hex",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board.map",
            "namespace": "model",
            "file": "src/js/model/board/map/Hex.js",
            "line": 14,
            "description": "<pre>\nInvariant: NONE\n</pre>",
            "params": [
                {
                    "name": "the",
                    "description": "location of the hex",
                    "type": "hexgrid.HexLocation"
                },
                {
                    "name": "data",
                    "description": "The data from the JSON model",
                    "type": "JSON"
                }
            ],
            "is_constructor": 1
        },
        "model.Map": {
            "name": "model.Map",
            "shortname": "Map",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board.map",
            "namespace": "model",
            "file": "src/js/model/board/map/Map.js",
            "line": 11,
            "description": "<pre>\nInvariant: NONE\n</pre>",
            "is_constructor": 1
        },
        "model.NumberTiles": {
            "name": "model.NumberTiles",
            "shortname": "NumberTiles",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board.map",
            "namespace": "model",
            "file": "src/js/model/board/map/NumberTiles.js",
            "line": 11,
            "description": "<pre>\nInvariant: NONE\n</pre>",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "is_constructor": 1
        },
        "model.Numbers": {
            "name": "model.Numbers",
            "shortname": "Numbers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board.map",
            "namespace": "model",
            "file": "src/js/model/board/map/Numbers.js",
            "line": 11,
            "description": "<pre>\nInvariant: \n</pre>",
            "is_constructor": 1
        },
        "model.Port": {
            "name": "model.Port",
            "shortname": "Port",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board.map",
            "namespace": "model",
            "file": "src/js/model/board/map/Port.js",
            "line": 19,
            "description": "<pre>\nInvariant: NONE\n</pre>",
            "is_constructor": 1
        },
        "model.Vertex": {
            "name": "model.Vertex",
            "shortname": "Vertex",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board.map",
            "namespace": "model",
            "file": "src/js/model/board/map/Vertex.js",
            "line": 11,
            "description": "<pre>\nInvariant: NONE\n</pre>",
            "params": [
                {
                    "name": "direction",
                    "description": "the vertex direction",
                    "type": "Int"
                },
                {
                    "name": "data",
                    "description": "the json data",
                    "type": "JSON"
                }
            ],
            "is_constructor": 1
        },
        "models.CatanEdge": {
            "name": "models.CatanEdge",
            "shortname": "CatanEdge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "namespace": "models",
            "file": "src/js/model/board/map/hexgrid_impl.js",
            "line": 26,
            "description": "This class represents an edge. It inherits from BaseContainer.\n    The data in this class (that you get from the JSON model) is independent of the hexgrid, except for the location.\n    Therefore, we leave it up to you to decide how to implement it.\n    It must however implement one function that the hexgrid looks for: 'isOccupied' - look at its documentation.\n    From the JSON, this object will have two properties: location, and ownerID.\n    Besides the 'isOccupied' method, you may add any other methods that you need.",
            "is_constructor": 1,
            "extends": "hexgrid.BaseContainer"
        },
        "models.CatanVertex": {
            "name": "models.CatanVertex",
            "shortname": "CatanVertex",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "namespace": "models",
            "file": "src/js/model/board/map/hexgrid_impl.js",
            "line": 81,
            "description": "This class represents a Hex. You may add any methods that you need (e.g., to get the resource/hex type, etc.)\n    \n    In order to work with the hexgrid, this class must extend hexgrid.BasicHex (already done in the code). You also need to implement\n    a CatanVertex and CatanEdge classes (stubs are provided in this file).  Look at their documentation to see what needs to be done there.\n     \n    The hexgrid will be passed an instance of this class to use as a model, and will pull the constructor from that instance. \n    (The core.forceInherit sets the constructor, in case you are curious how that works)",
            "is_constructor": 1,
            "params": [
                {
                    "name": "location",
                    "description": "- the location of this hex. It's used to generate locations for the vertexes and edges.",
                    "type": "hexgrid.HexLocation"
                }
            ],
            "extends": "hexgrid.BasicHex"
        },
        "board.Bank": {
            "name": "board.Bank",
            "shortname": "Bank",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board",
            "namespace": "board",
            "file": "src/js/model/board/Bank.js",
            "line": 9,
            "description": "The game's bank, containing the resource cards.\n<pre>\nInvariant: The bank has 0 or more of each resource. There are never more than 19 of a given resource in the game alrogether.\n</pre>",
            "is_constructor": 1
        },
        "model.Deck": {
            "name": "model.Deck",
            "shortname": "Deck",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board",
            "namespace": "model",
            "file": "src/js/model/board/Deck.js",
            "line": 11,
            "description": "<pre>\nInvariant: NONE\n</pre>",
            "is_constructor": 1
        },
        "model.GameBoard": {
            "name": "model.GameBoard",
            "shortname": "GameBoard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board",
            "namespace": "model",
            "file": "src/js/model/board/GameBoard.js",
            "line": 10,
            "description": "<pre>\nInvariant: The game has a full number of players. \n</pre>\nGameBoard is the master model that manages all models needed to play the game",
            "is_constructor": 1,
            "params": [
                {
                    "name": "proxy",
                    "description": "Proxy responsiple for communication with the server",
                    "type": "model.proxy"
                }
            ]
        },
        "board.Player": {
            "name": "board.Player",
            "shortname": "Player",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board",
            "namespace": "board",
            "file": "src/js/model/board/Player.js",
            "line": 11,
            "description": "The player object\n<pre>\nInvariant: NONE\n</pre>",
            "is_constructor": 1
        },
        "model.TurnTracker": {
            "name": "model.TurnTracker",
            "shortname": "TurnTracker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model.board",
            "namespace": "model",
            "file": "src/js/model/board/TurnTraker.js",
            "line": 11,
            "description": "Functionality that interfaces with the system to track player turn status.\n\n<pre>\nInvariant: \n</pre>",
            "is_constructor": 1
        },
        "model.Chat": {
            "name": "model.Chat",
            "shortname": "Chat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model",
            "namespace": "model",
            "file": "src/js/model/Chat.js",
            "line": 9,
            "description": "<pre>\nInvariant: NONE\n</pre>",
            "is_constructor": 1
        },
        "model.GameRoom": {
            "name": "model.GameRoom",
            "shortname": "GameRoom",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model",
            "namespace": "model",
            "file": "src/js/model/GameRoom.js",
            "line": 11,
            "description": "<pre>\nInvariant: NONE\n</pre>\nGameRoom manages creating users and games, and allowing users to join or create a game.",
            "params": [
                {
                    "name": "proxy",
                    "description": "Reference to proxy",
                    "type": "model.Proxy"
                }
            ]
        },
        "model.GameTable": {
            "name": "model.GameTable",
            "shortname": "GameTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model",
            "namespace": "model",
            "file": "src/js/model/GameTable.js",
            "line": 8,
            "description": "<pre>\nInvariant: NONE\n</pre>\nGameTable manages all data used by the web-interface.",
            "params": [
                {
                    "name": "proxy",
                    "description": "A reference to the HTTP proxy used",
                    "type": "model.Proxy"
                }
            ],
            "is_constructor": 1
        },
        "model.Log": {
            "name": "model.Log",
            "shortname": "Log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model",
            "namespace": "model",
            "file": "src/js/model/Log.js",
            "line": 11,
            "description": "Keeps track of the log\n<pre>\nInvariant: the log always has room for more.\n</pre>",
            "itemtype": "property",
            "is_constructor": 1
        },
        "model.Proxy": {
            "name": "model.Proxy",
            "shortname": "Proxy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.model",
            "namespace": "model",
            "file": "src/js/model/Proxy.js",
            "line": 9,
            "description": "Keeps track of the Proxy\n<pre>\n\n</pre>",
            "is_constructor": 1
        },
        "models.ClientModel": {
            "name": "models.ClientModel",
            "shortname": "ClientModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "namespace": "models",
            "file": "src/js/model/clientmodel.js",
            "line": 13,
            "description": "This the top-level client model class that contains the local player, map contents, etc.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "playerID",
                    "description": "The id of the local player, extracted from the cookie",
                    "type": "Integer"
                }
            ]
        },
        "comm.BaseCommView": {
            "name": "comm.BaseCommView",
            "shortname": "BaseCommView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.comm",
            "namespace": "comm",
            "file": "node_modules/byu-catan/gameplay/js/comms_box/CommView.js",
            "line": 18,
            "description": "The superclass for displaying a message history.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "params",
                    "description": "an object with information for displaying the view",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parentElem",
                            "description": "the HTMLDivElement where the view resides",
                            "type": "HTMLDivElement"
                        },
                        {
                            "name": "message",
                            "description": "a message to display when no output has been generated",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "the prefix id for the element",
                            "type": "String"
                        },
                        {
                            "name": "haveInput",
                            "description": "whether the view is display-only or not",
                            "type": "Boolean"
                        }
                    ]
                }
            ]
        },
        "comm.LogView": {
            "name": "comm.LogView",
            "shortname": "LogView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.comm",
            "namespace": "comm",
            "file": "node_modules/byu-catan/gameplay/js/comms_box/CommView.js",
            "line": 102,
            "description": "The view class for the Log",
            "is_constructor": 1,
            "extends": "comm.BaseCommView"
        },
        "comm.ChatView": {
            "name": "comm.ChatView",
            "shortname": "ChatView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.comm",
            "namespace": "comm",
            "file": "node_modules/byu-catan/gameplay/js/comms_box/CommView.js",
            "line": 126,
            "description": "The view class for the Chat",
            "is_constructor": 1,
            "extends": "comm.BaseCommView"
        },
        "devCards.BuyCardView": {
            "name": "devCards.BuyCardView",
            "shortname": "BuyCardView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.devCards",
            "namespace": "devCards",
            "file": "node_modules/byu-catan/gameplay/js/development_cards/BuyOverlay.js",
            "line": 17,
            "description": "A view for buying a development card.  Inherits from misc.BaseOverlay.",
            "is_constructor": 1,
            "extends": "misc.BaseOverlay"
        },
        "devCards.DevCardView": {
            "name": "devCards.DevCardView",
            "shortname": "DevCardView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.devCards",
            "namespace": "devCards",
            "file": "node_modules/byu-catan/gameplay/js/development_cards/CardOverlay.js",
            "line": 26,
            "description": "A view for viewing and using development cards.  Inherits from misc.BaseOverlay.",
            "extends": "misc.BaseOverlay",
            "is_constructor": 1
        },
        "discard.DiscardView": {
            "name": "discard.DiscardView",
            "shortname": "DiscardView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.discard",
            "namespace": "discard",
            "file": "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js",
            "line": 19,
            "description": "A view for discarding cards.  Inherits from misc.BaseOverlay.",
            "is_constructor": 1,
            "extends": "misc.BaseOverlay"
        },
        "map.MapOverlay": {
            "name": "map.MapOverlay",
            "shortname": "MapOverlay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.map",
            "namespace": "map",
            "file": "node_modules/byu-catan/gameplay/js/map/MapOverlay.js",
            "line": 100,
            "description": "This class implements the map pop-out overlay view that lets the user place a piece on the map.  \n\t\tIt inherits from misc.BaseOverlay.\nIt calls the \"cancelMove\" function on the controller it belongs to.",
            "is_constructor": 1
        },
        "map.Point": {
            "name": "map.Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.map",
            "namespace": "map",
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 168,
            "description": "An (x,y) point",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x location",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "The y location",
                    "type": "Integer"
                }
            ]
        },
        "map.VertexLoc": {
            "name": "map.VertexLoc",
            "shortname": "VertexLoc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.map",
            "namespace": "map",
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 194,
            "description": "This class defines a vertex location as used by view. It uses a unique representation for each vertex",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x location of the hex the vertex is on",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "The y location of the hex the vertex is on",
                    "type": "Integer"
                },
                {
                    "name": "dir",
                    "description": "The location of the vertex on the hex (allowed values:\"E\", \"W\")",
                    "type": "String"
                }
            ]
        },
        "map.EdgeLoc": {
            "name": "map.EdgeLoc",
            "shortname": "EdgeLoc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.map",
            "namespace": "map",
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 228,
            "description": "This class defines an edge location as used by view. It uses a unique representation for each edge",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x location of the hex the edge is on",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "The y location of the hex the edge is on",
                    "type": "Integer"
                },
                {
                    "name": "dir",
                    "description": "The location of the edge on the hex (allowed values:\"SW\", \"S\", \"SE\")",
                    "type": "String"
                }
            ]
        },
        "map.PortLoc": {
            "name": "map.PortLoc",
            "shortname": "PortLoc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.map",
            "namespace": "map",
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 257,
            "description": "This class defines a port location as used by view. It uses a unique representation for each port location/orientation.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x location of the hex the port is on",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "The y location of the hex the port is on",
                    "type": "Integer"
                },
                {
                    "name": "rotation",
                    "description": "The rotation of the port",
                    "type": "Integer"
                }
            ]
        },
        "map.MapView": {
            "name": "map.MapView",
            "shortname": "MapView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.map",
            "namespace": "map",
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 861,
            "description": "You need to pass in how many pixels tall/wide the map is \nand how many hexes tall/wide the map is \n(the hex dim can be calculated from the client model)",
            "params": [
                {
                    "name": "pixelDim",
                    "description": "the height of the map measured in pixels",
                    "type": "Int"
                },
                {
                    "name": "hexDim",
                    "description": "the height of the map measured in hexes",
                    "type": "Int"
                }
            ],
            "is_constructor": 1
        },
        "map.RobberOverlay": {
            "name": "map.RobberOverlay",
            "shortname": "RobberOverlay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.map",
            "namespace": "map",
            "file": "node_modules/byu-catan/gameplay/js/map/RobberOverlay.js",
            "line": 23,
            "description": "This class implements the overlay view that lets the user select a player to rob.  \nIt displays a list of other users who can be robbed, and lets the user select which one they want to rob.\n\t\tIt inherits from misc.BaseOverlay.\nIts controller should be set to a MapController, on which it calls the \"robPlayer\" method.",
            "is_constructor": 1,
            "extends": "misc.BaseOverlay"
        },
        "hexgrid.BasicHex": {
            "name": "hexgrid.BasicHex",
            "shortname": "BasicHex",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 21,
            "description": "This class serves as the basis for the different hexes (water, desert, resource)\nYou should extend this class - in you're constructor, pass in the proper edge and vertex classes \n(they should extend the hexgrid.BaseContainer class)",
            "is_constructor": 1,
            "params": [
                {
                    "name": "location",
                    "description": "- the location of the hex",
                    "type": "hexgrid.HexLocation"
                },
                {
                    "name": "EdgeClass",
                    "description": "- the class (NOT AN INSTANCE) you use for an edge - must have an empty constructor",
                    "type": "hexgrid.BaseContainer"
                },
                {
                    "name": "VertexClass",
                    "description": "- the class (NOT AN INSTANCE) you use for an vertex - must have an empty constructor",
                    "type": "hexgrid.BaseContainer"
                }
            ]
        },
        "hexgrid.EdgeDirection": {
            "name": "hexgrid.EdgeDirection",
            "shortname": "EdgeDirection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 109,
            "description": "Use this class to look up the numerical value of a EdgeDirection from JSON.\n\tThese are the edge values in clockwise order starting at NW.\n\tThey are in order so that modulo math makes this easy\n\tEdge and Vertex Directions give you the edge and then the vertex in clockwise order\nIt's really just an enumeration. For example EdgeDirection[\"NW\"] or EdgeDirection.NW returns 0;\nThe possible edge directions are \"NW\",\"N\",\"NE\",\"SE\",\"S\",\"SW\""
        },
        "hexgrid.HexDirection": {
            "name": "hexgrid.HexDirection",
            "shortname": "HexDirection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 122,
            "description": "These are simply a copy of EdgeDirections. They can be fed to a hexgrid.HexLocation to get \nthe location of the hex next to it in that direction. It's really just an enumeration."
        },
        "hexgrid.VertexDirection": {
            "name": "hexgrid.VertexDirection",
            "shortname": "VertexDirection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 128,
            "description": "Use this class to look up the numerical value of a VertexDirection from JSON.\n\tThese are the vertex values in clockwise order starting at NW.\n\tThey are in order so that modulo math makes this easy\n\tEdge and Vertex Directions give you the edge and then the vertex in clockwise order.\nIt's really just an enumeration. For example VertexDirection[\"NW\"] or VertexDirection.NW returns 1;\nThe possible VertexDirection are \"W\",\"NW\",\"NE\",\"E\",\"SE\",\"SW\""
        },
        "hexgrid.HexGrid": {
            "name": "hexgrid.HexGrid",
            "shortname": "HexGrid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 141,
            "description": "This class will never be directly used by anything other than the map.\nIt's purpose is to present an array-like interface for hex storage, \nas well as reducing wasted space that naturally incurs. It also provides\na clean interface for generating the initial tiles.\n\nThis takes the length of 3 connected sides and returns a hexagonal\ngrid object. Of necessity, two of the three dimensions must be \nthe same - this generates a hexagon that is symmetrical along two axis.\nThis is perhaps overkill, but the implementation provides insight into \nhow hexagonal grids work.\n\nYou'll want to use the static method 'getRegular' which takes radius and the prototype of your hex",
            "is_constructor": 1,
            "params": [
                {
                    "name": "bWidth",
                    "description": "The length (width) of the bottom edge in tiles",
                    "type": "Integer"
                },
                {
                    "name": "lDiagonal",
                    "description": "The length of the lower right diagonal edge in tiles",
                    "type": "Integer"
                },
                {
                    "name": "rDiagonal",
                    "description": "The length of the lower left diagonal edge in tiles",
                    "type": "Integer"
                },
                {
                    "name": "x0",
                    "description": "The x offset from the lower left corner for to place (0,0)",
                    "type": "Integer"
                },
                {
                    "name": "y0",
                    "description": "The y offset from the lower left corner to place (0,0)",
                    "type": "Integer"
                },
                {
                    "name": "hexClass",
                    "description": "The constructor for a hex.",
                    "type": "hexgrid.BasicHex"
                }
            ]
        },
        "hexgrid.HexLocation": {
            "name": "hexgrid.HexLocation",
            "shortname": "HexLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 350,
            "description": "This represents a location of a hex on a hex grid.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ]
        },
        "hexgrid.BaseLocation": {
            "name": "hexgrid.BaseLocation",
            "shortname": "BaseLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 419,
            "description": "This is the base class for VertexLocation and EdgeLocation\n        * \n        * -- This is NOT instantiable by itself --\n        *",
            "is_constructor": 1
        },
        "hexgrid.EdgeLocation": {
            "name": "hexgrid.EdgeLocation",
            "shortname": "EdgeLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 519,
            "description": "This class represent an edge location. It consists of a hex location\nand an edge direction\n    This takes a hex location and a direction. Alternatively you can use\n     (x,y,direction)",
            "is_constructor": 1,
            "params": [
                {
                    "name": "hexLocation",
                    "description": "The location of the parent hex",
                    "type": "HexLocation"
                },
                {
                    "name": "direction",
                    "description": "The direction of the edge relative to the hex",
                    "type": "hexgrid.EdgeDirection"
                }
            ],
            "extends": "hexgrid.BaseLocation"
        },
        "hexgrid.VertexLocation": {
            "name": "hexgrid.VertexLocation",
            "shortname": "VertexLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 596,
            "description": "This class represents a vertex location. It consists of a hex location\nand a vertex direction. Instead of (hexLocation, direction) you can use\n    (x, y, direction).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "hexLocation",
                    "description": "The location of the parent hex",
                    "type": "hexgrid.HexLocation"
                },
                {
                    "name": "direction",
                    "description": "The direction of the vertex relative to the hex",
                    "type": "hexgrid.VertexDirection"
                }
            ]
        },
        "hexgrid.BaseContainer": {
            "name": "hexgrid.BaseContainer",
            "shortname": "BaseContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid",
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 678,
            "description": "This class represents a base container (to be used for Edge or Vertex). You'll need to pass a child-class (the constructor/\n    class, not an instance) to the BasicHex constructor so that it knows how to store stuff. This is the default implementation\n    which provides the the abstract the minimum functions. Extends this class to make an Edge/Vertex container class.",
            "is_constructor": 1
        },
        "misc.GameFinishedView": {
            "name": "misc.GameFinishedView",
            "shortname": "GameFinishedView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.misc",
            "namespace": "misc",
            "file": "node_modules/byu-catan/gameplay/js/points/GameOverOverlay.js",
            "line": 23,
            "description": "A view to display the results of the game; inherits from misc.BaseOverlay",
            "is_constructor": 1,
            "extends": "misc.BaseOverlay"
        },
        "points.PointView": {
            "name": "points.PointView",
            "shortname": "PointView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.points",
            "namespace": "points",
            "file": "node_modules/byu-catan/gameplay/js/points/PointsView.js",
            "line": 19,
            "description": "This class provides a victory point tracker view",
            "is_constructor": 1
        },
        "resources.ResourceBarView": {
            "name": "resources.ResourceBarView",
            "shortname": "ResourceBarView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.resources",
            "namespace": "resources",
            "file": "node_modules/byu-catan/gameplay/js/resources/ResourcesView.js",
            "line": 25,
            "description": "View to display client player's current resources: \n\tResources (wood, sheep, ore, brick, wheat) and \n\tBuyable Options (houses, roads, cities). \nIt also includes:\n\tOption to buy a Development card\n Option to play a Development card\n\tThe number of armies the player has used\nIt calls the following controller methods: \"buildRoad\", \"buildSettlement\", \"buildCity\", \"buyCard\", \"playCard\"",
            "is_constructor": 1
        },
        "roll.RollView": {
            "name": "roll.RollView",
            "shortname": "RollView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.roll",
            "namespace": "roll",
            "file": "node_modules/byu-catan/gameplay/js/roll/RollOverlay.js",
            "line": 25,
            "description": "A view for rolling the dice.  It inherits from misc.BaseOverlay.\nIt calls the \"rollDice\" method on its controller if the user clicks the \"Roll\" button.",
            "is_constructor": 1,
            "extends": "misc.BaseOverlay"
        },
        "roll.RollResultView": {
            "name": "roll.RollResultView",
            "shortname": "RollResultView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.roll",
            "namespace": "roll",
            "file": "node_modules/byu-catan/gameplay/js/roll/RollResultOverlay.js",
            "line": 23,
            "description": "A view for displaying the result of a roll.  It inherits from misc.BaseOverlay.\nIt calls the \"closeResult\" method on its controller when the user clicks the \"Okay\" button.",
            "is_constructor": 1,
            "extends": "misc.BaseOverlay"
        },
        "domestic.AcceptView": {
            "name": "domestic.AcceptView",
            "shortname": "AcceptView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic",
            "file": "node_modules/byu-catan/gameplay/js/trading/AcceptOverlay.js",
            "line": 21,
            "description": "A view for accepting a trade from a player.  It inherits from misc.BaseOverlay.",
            "is_constructor": 1,
            "extends": "misc.BaseOverlay"
        },
        "domestic.DomesticView": {
            "name": "domestic.DomesticView",
            "shortname": "DomesticView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic",
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 26,
            "description": "A view for setting up trades between players.",
            "is_constructor": 1
        },
        "maritime.MaritimeView": {
            "name": "maritime.MaritimeView",
            "shortname": "MaritimeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime",
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 26,
            "description": "A view for setting up trades between the client player and the bank.",
            "is_constructor": 1
        },
        "turntracker.TurnTrackerView": {
            "name": "turntracker.TurnTrackerView",
            "shortname": "TurnTrackerView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.turntracker",
            "namespace": "turntracker",
            "file": "node_modules/byu-catan/gameplay/js/turn_tracker/TrackerView.js",
            "line": 20,
            "description": "A view that is used for displaying the current state of the game:\n1) a table that displays each player's basic information and highlights the current turn,\n2) a button to display the game state",
            "is_constructor": 1
        },
        "misc.BaseOverlay": {
            "name": "misc.BaseOverlay",
            "shortname": "BaseOverlay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.misc",
            "namespace": "misc",
            "file": "node_modules/byu-catan/gameplay/js/view_basics/BasicOverlay.js",
            "line": 13,
            "description": "This class is the base class for all overlay view classes.",
            "is_constructor": 1
        },
        "misc.WaitOverlay": {
            "name": "misc.WaitOverlay",
            "shortname": "WaitOverlay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "catan.misc",
            "namespace": "misc",
            "file": "node_modules/byu-catan/gameplay/js/view_basics/WaitOverlay.js",
            "line": 16,
            "description": "This class implements a placeholder overlay to enforce a wait period.\nIt inherits from misc.BaseOverlay.\nIt does not call any controller methods.",
            "extends": "misc.BaseOverlay",
            "is_constructor": 1
        },
        "core.Core": {
            "name": "core.Core",
            "shortname": "Core",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core",
            "namespace": "core",
            "file": "node_modules/byu-catan/gameplay/js/Core.js",
            "line": 9,
            "description": "This really isn't a class. These are actually standalone functions.",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "src/js/controllers/CardController.js",
            "line": 37,
            "description": "Called when the player buys a development card",
            "itemtype": "method",
            "name": "buyCard",
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardController",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "src/js/controllers/CardController.js",
            "line": 45,
            "description": "Called when the player plays a year of plenty card",
            "itemtype": "method",
            "name": "useYearOfPlenty",
            "params": [
                {
                    "name": "resource1",
                    "description": "The first resource to obtain",
                    "type": "String"
                },
                {
                    "name": "resource2",
                    "description": "The second resource to obtain",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardController",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "src/js/controllers/CardController.js",
            "line": 55,
            "description": "Called when the player plays a monopoly card",
            "itemtype": "method",
            "name": "useMonopoly",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource to obtain",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardController",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "src/js/controllers/CardController.js",
            "line": 64,
            "description": "Called when the player plays a monument card",
            "itemtype": "method",
            "name": "useMonument",
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardController",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "src/js/controllers/CardController.js",
            "line": 72,
            "description": "Called when the player plays a soldier card",
            "itemtype": "method",
            "name": "useSoldier",
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardController",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "src/js/controllers/CardController.js",
            "line": 80,
            "description": "Called when the player plays the road building card",
            "itemtype": "method",
            "name": "useRoadBuild",
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardController",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "src/js/controllers/CommController.js",
            "line": 74,
            "description": "Called by the view whenever input is submitted",
            "itemtype": "method",
            "name": "addLine",
            "params": [
                {
                    "name": "lineContents",
                    "description": "The contents of the submitted string",
                    "type": "String"
                }
            ],
            "class": "comm.ChatController",
            "module": "catan.comm",
            "namespace": "comm"
        },
        {
            "file": "src/js/controllers/DiscardController.js",
            "line": 42,
            "description": "Called by the view when the player clicks the discard button.\n         It should send the discard command and allow the game to continue.",
            "itemtype": "method",
            "name": "discard",
            "return": {
                "description": "void"
            },
            "class": "discard.DiscardController",
            "module": "catan.discard",
            "namespace": "discard"
        },
        {
            "file": "src/js/controllers/DiscardController.js",
            "line": 51,
            "description": "Called by the view when the player increases the amount to discard for a single resource.",
            "itemtype": "method",
            "name": "increaseAmount",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource to discard",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "discard.DiscardController",
            "module": "catan.discard",
            "namespace": "discard"
        },
        {
            "file": "src/js/controllers/DiscardController.js",
            "line": 60,
            "description": "Called by the view when the player decreases the amount to discard for a single resource.",
            "itemtype": "method",
            "name": "decreaseAmount",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource to discard",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "discard.DiscardController",
            "module": "catan.discard",
            "namespace": "discard"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 39,
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 41,
            "itemtype": "method",
            "name": "setResourceToSend",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource to send (\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 49,
            "itemtype": "method",
            "name": "setResourceToReceive",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource to receive (\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 57,
            "itemtype": "method",
            "name": "unsetResource",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource to clear (\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 65,
            "itemtype": "method",
            "name": "setPlayerToTradeWith",
            "params": [
                {
                    "name": "playerNumber",
                    "description": "the player to trade with",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 73,
            "description": "Increases the amount to send or receive of a resource",
            "itemtype": "method",
            "name": "increaseResourceAmount",
            "params": [
                {
                    "name": "resource",
                    "description": "(\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 82,
            "description": "Decreases the amount to send or receive of a resource",
            "itemtype": "method",
            "name": "decreaseResourceAmount",
            "params": [
                {
                    "name": "resource",
                    "description": "(\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 91,
            "description": "Sends the trade offer to the accepting player",
            "itemtype": "method",
            "name": "sendTradeOffer",
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 100,
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/DomesticController.js",
            "line": 102,
            "description": "Finalizes the trade between players",
            "itemtype": "method",
            "name": "acceptTrade",
            "params": [
                {
                    "name": "willAccept",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticController",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "src/js/controllers/MapController.js",
            "line": 44,
            "description": "This method is called by the Rob View when a player to rob is selected via a button click.",
            "params": [
                {
                    "name": "orderID",
                    "description": "The index (0-3) of the player who is to be robbed",
                    "type": "Integer"
                }
            ],
            "itemtype": "method",
            "name": "robPlayer",
            "class": "map.MapController",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "src/js/controllers/MapController.js",
            "line": 52,
            "description": "Starts the robber movement on the map. The map should pop out and the player should be able\nmove the robber.  This is called when the user plays a \"solider\" development card.",
            "itemtype": "method",
            "name": "doSoldierAction",
            "return": {
                "description": "void"
            },
            "class": "map.MapController",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "src/js/controllers/MapController.js",
            "line": 61,
            "description": "Pops the map out and prompts the player to place two roads.\nThis is called when the user plays a \"road building\" progress development card.",
            "itemtype": "method",
            "name": "startDoubleRoadBuilding",
            "return": {
                "description": "void"
            },
            "class": "map.MapController",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "src/js/controllers/MapController.js",
            "line": 71,
            "description": "Pops the map out and prompts the player to place the appropriate piece",
            "params": [
                {
                    "name": "pieceType",
                    "description": "- \"road\", \"settlement\", or \"city",
                    "type": "String"
                },
                {
                    "name": "free",
                    "description": "- Set to true in road building and the initial setup",
                    "type": "Boolean"
                },
                {
                    "name": "disconnected",
                    "description": "- Whether or not the piece can be disconnected. Set to true only in initial setup",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "startMove",
            "return": {
                "description": "void"
            },
            "class": "map.MapController",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "src/js/controllers/MapController.js",
            "line": 82,
            "description": "This method is called from the modal view when the cancel button is pressed. \nIt should allow the user to continue gameplay without having to place a piece.",
            "itemtype": "method",
            "name": "cancelMove",
            "return": {
                "description": "void"
            },
            "class": "map.MapController",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "src/js/controllers/MapController.js",
            "line": 91,
            "description": "This method is called whenever the user is trying to place a piece on the map. \n         It is called by the view for each \"mouse move\" event.  \n         The returned value tells the view whether or not to allow the piece to be \"dropped\" at the current location.",
            "params": [
                {
                    "name": "loc",
                    "description": "The location being considered for piece placement",
                    "type": "MapLocation"
                },
                {
                    "name": "type",
                    "description": "The type of piece the player is trying to place (\"robber\",\"road\",\"settlement\",\"city\")",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "onDrag",
            "return": {
                "description": "Whether or not the given piece can be placed at the current location.",
                "type": "Boolean"
            },
            "class": "map.MapController",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "src/js/controllers/MapController.js",
            "line": 104,
            "description": "This method is called when the user clicks the mouse to place a piece.\n         This method should close the modal and possibly trigger the Rob View.",
            "params": [
                {
                    "name": "loc",
                    "description": "The location where the piece is being placed",
                    "type": "MapLocation"
                },
                {
                    "name": "type",
                    "description": "The type of piece being placed (\"robber\",\"road\",\"settlement\",\"city\")",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "onDrop",
            "class": "map.MapController",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "src/js/controllers/MaritimeController.js",
            "line": 35,
            "description": "Called by the view when the player \"undoes\" their give selection",
            "itemtype": "method",
            "name": "unsetGiveValue",
            "return": {
                "description": "void"
            },
            "class": "maritime.MaritimeController",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "src/js/controllers/MaritimeController.js",
            "line": 43,
            "description": "Called by the view when the player \"undoes\" their get selection",
            "itemtype": "method",
            "name": "unsetGetValue",
            "return": {
                "description": "void"
            },
            "class": "maritime.MaritimeController",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "src/js/controllers/MaritimeController.js",
            "line": 51,
            "description": "Called by the view when the player selects which resource to give",
            "itemtype": "method",
            "name": "setGiveValue",
            "params": [
                {
                    "name": "resource",
                    "description": "The resource to trade (\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "maritime.MaritimeController",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "src/js/controllers/MaritimeController.js",
            "line": 60,
            "description": "Called by the view when the player selects which resource to get",
            "itemtype": "method",
            "name": "setGetValue",
            "params": [
                {
                    "name": "resource",
                    "description": "The resource to trade (\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "maritime.MaritimeController",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "src/js/controllers/MaritimeController.js",
            "line": 73,
            "itemtype": "method",
            "name": "makeTrade",
            "return": {
                "description": "void"
            },
            "class": "maritime.MaritimeController",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "src/js/controllers/ResourcesController.js",
            "line": 48,
            "description": "The action to take on clicking the resource bar road button. Brings up the map \noverlay and allows you to place a road.",
            "itemtype": "method",
            "name": "buildRoad",
            "return": {
                "description": "void"
            },
            "class": "resources.ResourceBarController",
            "module": "catan.resources",
            "namespace": "resources"
        },
        {
            "file": "src/js/controllers/ResourcesController.js",
            "line": 63,
            "description": "The action to take on clicking the resource bar settlement button. Brings up the map \noverlay and allows you to place a settlement.",
            "itemtype": "method",
            "name": "buildSettlement",
            "return": {
                "description": "void"
            },
            "class": "resources.ResourceBarController",
            "module": "catan.resources",
            "namespace": "resources"
        },
        {
            "file": "src/js/controllers/ResourcesController.js",
            "line": 78,
            "description": "The action to take on clicking the resource bar city button. Brings up the map \noverlay and allows you to place a city.",
            "itemtype": "method",
            "name": "buildCity",
            "return": {
                "description": "void"
            },
            "class": "resources.ResourceBarController",
            "module": "catan.resources",
            "namespace": "resources"
        },
        {
            "file": "src/js/controllers/ResourcesController.js",
            "line": 93,
            "description": "The action to take on clicking the resource bar \"buy a card\" button. \nShould bring up the \"buy a card\" overlay.",
            "itemtype": "method",
            "name": "buyCard",
            "return": {
                "description": "void"
            },
            "class": "resources.ResourceBarController",
            "module": "catan.resources",
            "namespace": "resources"
        },
        {
            "file": "src/js/controllers/ResourcesController.js",
            "line": 108,
            "description": "The action to take on clicking the resource bar \"play a card\" button. \nShould bring up the \"play a card\" overlay.",
            "itemtype": "method",
            "name": "playCard",
            "return": {
                "description": "void"
            },
            "class": "resources.ResourceBarController",
            "module": "catan.resources",
            "namespace": "resources"
        },
        {
            "file": "src/js/controllers/RollController.js",
            "line": 37,
            "description": "This is called from the roll result view.  It should close the roll result view and allow the game to continue.",
            "itemtype": "method",
            "name": "closeResult",
            "return": {
                "description": "void"
            },
            "class": "roll.RollController",
            "module": "catan.roll",
            "namespace": "roll"
        },
        {
            "file": "src/js/controllers/RollController.js",
            "line": 45,
            "description": "This method generates a dice roll",
            "itemtype": "method",
            "name": "rollDice",
            "return": {
                "description": "void"
            },
            "class": "roll.RollController",
            "module": "catan.roll",
            "namespace": "roll"
        },
        {
            "file": "src/js/controllers/TrackerController.js",
            "line": 36,
            "description": "Called by the view when the local player ends their turn.",
            "itemtype": "method",
            "name": "endTurn",
            "return": {
                "description": "void"
            },
            "class": "turntracker.TurnTrackerController",
            "module": "catan.turntracker",
            "namespace": "turntracker"
        },
        {
            "file": "src/js/model/board/map/Edge.js",
            "line": 25,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getHexDirection",
            "return": {
                "description": "The direction",
                "type": "Integer"
            },
            "class": "model.Edge",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Edge.js",
            "line": 37,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "isOccupied",
            "return": {
                "description": "whether the edge is occupied",
                "type": "Boolean"
            },
            "class": "model.Edge",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Edge.js",
            "line": 49,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getOwner",
            "return": {
                "description": "playerID of the owner",
                "type": "Int"
            },
            "class": "model.Edge",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Hex.js",
            "line": 29,
            "description": "When a settlement is to be placed, all three adjoining hexes will be\nqueried.\n<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "canPlaceSettlement",
            "params": [
                {
                    "name": "playerId",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "vertex",
                    "description": "",
                    "type": "VertexDirection"
                }
            ],
            "return": {
                "description": "-1 if definitely no, 0 if maybe, 1 if yes",
                "type": "Integer"
            },
            "class": "model.Hex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Hex.js",
            "line": 44,
            "description": "Get the locations where a player can build a road\n<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "validRoadPlacements",
            "params": [
                {
                    "name": "playerId",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "locations where a road can be built",
                "type": "List<EdgeLocation>"
            },
            "class": "model.Hex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Hex.js",
            "line": 58,
            "description": "A list of the edges that have a road on them (for display)\n<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getOwnedEdges",
            "params": [
                {
                    "name": "playerId",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "a list of edges",
                "type": "List<Edge>"
            },
            "class": "model.Hex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Hex.js",
            "line": 72,
            "description": "A list of the vertecies that have a settlement or city on them (for display)\n<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getOwnedVertices",
            "params": [
                {
                    "name": "playerId",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "a list of vertecies",
                "type": "List<Vertex>"
            },
            "class": "model.Hex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Hex.js",
            "line": 85,
            "description": "Land type, described as a string",
            "itemtype": "property",
            "name": "landType",
            "type": "{string} what type of land is this",
            "class": "model.Hex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Hex.js",
            "line": 92,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "isLand",
            "return": {
                "description": "True when this hex is land",
                "type": "Boolean"
            },
            "class": "model.Hex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Hex.js",
            "line": 104,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "isDesert",
            "return": {
                "description": "True when this hex is desert",
                "type": "Boolean"
            },
            "class": "model.Hex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 32,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getHexAt",
            "params": [
                {
                    "name": "x",
                    "description": "coordinate of desired hex",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "coordinate of desired hex",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Hex object",
                "type": "Object"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 46,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getRobberPos",
            "return": {
                "description": "HexLocation of robber",
                "type": "HexLocation"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 58,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "lastRobberPos",
            "return": {
                "description": "HexLocation of last robber location",
                "type": "HexLocation"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 71,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getAllHexes",
            "return": {
                "description": "All of the hexes",
                "type": "HexLocation[]"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 83,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getOwnedEdges",
            "return": {
                "description": "Array of EdgeLocations that are owned by users.",
                "type": "EdgeLocation[]"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 98,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getOwnedVertices",
            "return": {
                "description": "Array of VertexLocations that user owns.",
                "type": "VertexLocation[]"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 112,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "portsForPlayer",
            "params": [
                {
                    "name": "playerId",
                    "description": "Player ID",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Array of HexLocations of ports that the player owns",
                "type": "HexLocation[]"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 132,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "canPlaceRoad",
            "params": [
                {
                    "name": "playerId",
                    "description": "Player ID",
                    "type": "Integer"
                },
                {
                    "name": "location",
                    "description": "The location to place the road",
                    "type": "EdgeLocation"
                }
            ],
            "return": {
                "description": "True if user can now place road, false if not.",
                "type": "Boolean"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 150,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "canPlaceRobber",
            "params": [
                {
                    "name": "playerId",
                    "description": "Player ID",
                    "type": "Integer"
                },
                {
                    "name": "location",
                    "description": "The location to place the robber",
                    "type": "HexLocation"
                }
            ],
            "return": {
                "description": "True if user can now place robber, false if not.",
                "type": "Boolean"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 165,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "canPlaceSettlement",
            "params": [
                {
                    "name": "playerId",
                    "description": "Player ID",
                    "type": "Integer"
                },
                {
                    "name": "vertex",
                    "description": "The location to place the settlement",
                    "type": "VertexLocation"
                }
            ],
            "return": {
                "description": "True if user can now place a settlement, false if not.",
                "type": "Boolean"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 181,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "canPlaceCity",
            "params": [
                {
                    "name": "playerId",
                    "description": "Player ID",
                    "type": "Integer"
                },
                {
                    "name": "vertex",
                    "description": "The location to place the city",
                    "type": "VertexLocation"
                }
            ],
            "return": {
                "description": "True if user can now place a city, false if not.",
                "type": "Boolean"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 195,
            "description": "<pre>\nPre-condition: the location is a legal move for the player, and it is their turn, and they have the resources & buildings.\nPost-condition: a road will be placed there (async!)\n</pre>",
            "itemtype": "method",
            "name": "placeRoad",
            "params": [
                {
                    "name": "playerId",
                    "description": "Player ID",
                    "type": "Integer"
                },
                {
                    "name": "Location",
                    "description": "of edge on hex to place road on",
                    "type": "EdgeLocation"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 209,
            "description": "<pre>\nPre-condition: the location is a legal move for the player, and it is their turn, and they have the resources & buildings.\nPost-condition: a settlement will be placed there (async!)\n</pre>",
            "itemtype": "method",
            "name": "placeSettlement",
            "params": [
                {
                    "name": "playerId",
                    "description": "Player ID",
                    "type": "Integer"
                },
                {
                    "name": "Location",
                    "description": "of vertex on hex to place settlement on",
                    "type": "VertexLocation"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 223,
            "description": "<pre>\nPre-condition: the location is a legal move for the player, and it is their turn, and they have the resources & buildings.\nPost-condition: a city will replace the settlement at that location (async!)\n</pre>",
            "itemtype": "method",
            "name": "placeCity",
            "params": [
                {
                    "name": "playerId",
                    "description": "Player ID",
                    "type": "Integer"
                },
                {
                    "name": "Location",
                    "description": "of vertex on hex to place city on",
                    "type": "VertexLocation"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 237,
            "description": "<pre>\nPre-condition: the player has a road-building card, and enough roads left,\nand it is their turn.\nPost-condition: roads will be placed at the given locations (async!)\n</pre>",
            "itemtype": "method",
            "name": "placeRoads",
            "params": [
                {
                    "name": "playerId",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "locations",
                    "description": "",
                    "type": "List<EdgeLocation>"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Map.js",
            "line": 251,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getNumbers",
            "return": {
                "description": "the number tiles",
                "type": "NumberTiles"
            },
            "class": "model.Map",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/NumberTiles.js",
            "line": 22,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getNumberPositions",
            "return": {
                "description": "A map of the locations",
                "type": "Map<integer, List<HexLocation>>"
            },
            "class": "model.NumberTiles",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Numbers.js",
            "line": 23,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getHexPositions",
            "return": {
                "description": "Array containing types and positions of hexes.",
                "type": "Object"
            },
            "class": "model.Numbers",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Port.js",
            "line": 36,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getRatio",
            "return": {
                "description": "Number of a given resource that must be traded to exchange for a desired resource.",
                "type": "Int"
            },
            "class": "model.Port",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Port.js",
            "line": 48,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getResource",
            "return": {
                "description": "Type of resource that this port represents",
                "type": "ResourceType"
            },
            "class": "model.Port",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Port.js",
            "line": 60,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getPosition",
            "return": {
                "description": "x,y coordinate pair representing position of port",
                "type": "Object"
            },
            "class": "model.Port",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Port.js",
            "line": 72,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getVertexLocations()",
            "return": {
                "description": "Array of vertex locations for the port",
                "type": "List<VertexLocation>"
            },
            "class": "model.Port",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Vertex.js",
            "line": 26,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getHexDirection",
            "return": {
                "description": "Hex direction",
                "type": "Integer"
            },
            "class": "model.Vertex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Vertex.js",
            "line": 38,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "isOccupied",
            "return": {
                "description": "whether the vertex is occupied",
                "type": "Boolean"
            },
            "class": "model.Vertex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/map/Vertex.js",
            "line": 50,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "hasCity",
            "return": {
                "description": "whether the vertex has a city",
                "type": "Boolean"
            },
            "class": "model.Vertex",
            "module": "catan.model.board.map",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/Bank.js",
            "line": 26,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "canWithdraw",
            "params": [
                {
                    "name": "resourceType",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "true if user can draw the resource, false otherwise",
                "type": "Boolean"
            },
            "class": "board.Bank",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Deck.js",
            "line": 29,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: A card will be given to the current player (async!)\n</pre>",
            "itemtype": "method",
            "name": "drawRandomCard",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.Deck",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/GameBoard.js",
            "line": 38,
            "description": "<pre>\nPre-condition: Id must be valid\nPost-condition: Returns complete player information\n</pre>\nGet information about a player in the game.",
            "itemtype": "method",
            "name": "getPlayer",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the player",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Returns the player object",
                "type": "Player"
            },
            "class": "model.GameBoard",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/GameBoard.js",
            "line": 53,
            "description": "<pre>\nPre-condition: none\nPost-condition: none\n</pre>\nDetermines if the game is over, either due to a winner or exceptional conditions",
            "itemtype": "method",
            "name": "isGameOver",
            "return": {
                "description": "True when the game is over",
                "type": "Boolean"
            },
            "class": "model.GameBoard",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/GameBoard.js",
            "line": 66,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "bigArmyOwner",
            "return": {
                "description": "ID of player who owns the biggest army. Returns -1 if no player has largest army award.",
                "type": "Int"
            },
            "class": "model.GameBoard",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/GameBoard.js",
            "line": 78,
            "description": "<pre>\nPre-condition: Game is over\nPost-condition: Return id of player with most points\n</pre>",
            "itemtype": "method",
            "name": "getWinner",
            "return": {
                "description": "ID of player with most points. El Conquistador!",
                "type": "Int"
            },
            "class": "model.GameBoard",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/GameBoard.js",
            "line": 90,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "longRoadOwner",
            "return": {
                "description": "ID of player with the longest road. Return -1 if no player owns this award.",
                "type": "Int"
            },
            "class": "model.GameBoard",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/GameBoard.js",
            "line": 102,
            "description": "<pre>\nPre-condition: The game is not over. The thief is allowed to move the robber and it is their turn. ThiefId and VictimId are valid. Hex is a valid hex\nPostcondition: Will change the card thief's and victim's card count, and move the robber location (async!)\n</pre>\n\nMoves the robber and allows the thief to steal cards",
            "itemtype": "method",
            "name": "robPlayer",
            "params": [
                {
                    "name": "thiefId",
                    "description": "The player stealing the cards",
                    "type": "Int"
                },
                {
                    "name": "victimId",
                    "description": "The player getting stolen from",
                    "type": "Int"
                },
                {
                    "name": "hex",
                    "description": "Where the robber is being moved to",
                    "type": "HexLocation"
                }
            ],
            "return": {
                "description": "nothing",
                "type": "Null"
            },
            "class": "model.GameBoard",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 25,
            "description": "What can this player build?\n<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "whatCanYouBuild",
            "return": {
                "description": "A list of the things that the player has resources\nto build/buy.",
                "type": "List<string>"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 38,
            "description": "Get a list of the playable development cards.\n<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "playableDevelopmentCards",
            "return": {
                "description": "A list of the development cards that the player \ncan play on this turn.",
                "type": "List<CardType>"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 53,
            "description": "Buy a development card.\n<pre>\nPre-condition: It is the player's turn, the player hasn't played a development\ncard on this turn yet, the player has the resources to buy a development card, \nand there is at least one development card left in the deck.\nPost-consition: The player discards the resources required to buy a development \ncard, gets a development card (but can't play it on this turn), and the deck \nhas one less development card.\n(async!)\n</pre>",
            "itemtype": "method",
            "name": "buyDevCard",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 70,
            "description": "Play a Year of Plenty card.\n<pre>\nPre-condition: It is the player's turn, the player hasn't played a development\ncard on this turn yet, the player has a Year of Plenty card, and the bank has\nthe selected resources.\nPost-condition: The player discards the Year of Plenty card, and gets the selected\nresources.\n(async!)\n</pre>",
            "itemtype": "method",
            "name": "yearOfPlenty",
            "params": [
                {
                    "name": "resource1",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "resource2",
                    "description": "",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 88,
            "description": "Play a Road Building card.\n<pre>\nPre-condition: It is the player's turn, the player hasn't played a development\ncard on this turn yet, the player has a Road Building card, the player has two \nunused roads, and there are two edges the player can legally place those roads on.\nPost-condition: The player discards the Road Building card, and now has roads\non the selected edges on the map.\n</pre>",
            "itemtype": "method",
            "name": "roadBuilding",
            "params": [
                {
                    "name": "edge1",
                    "description": "",
                    "type": "EdgeLocation"
                },
                {
                    "name": "edge2",
                    "description": "",
                    "type": "EdgeLocation"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 105,
            "description": "Play a Soldier card.\n<pre>\nPre-condition: It is the player's turn, the player hasn't played a development\ncard on this turn yet, the player has a Soldier card, and the robber is being \nmoved to a valid new hex location.\nPost-condition: The player discards the Soldier card, adds another soldier to\nhis/her army, the robber has been moved to a valid new location, and the player\nbeing robbed has given a random resource card to the player who played the\nSoldier card.\n(async!)\n</pre>",
            "itemtype": "method",
            "name": "playSoldier",
            "params": [
                {
                    "name": "hex",
                    "description": "",
                    "type": "HexLocation"
                },
                {
                    "name": "playerToRob",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 125,
            "description": "Play a Monopoly card.\n<pre>\nPre-condition: It is the player's turn, the player hasn't played a development\ncard on this turn yet, and the player has a Monopoly card.\nPost-condition: The player takes all resource cards of that type from all\nother players.\n(async!)\n</pre>",
            "itemtype": "method",
            "name": "monopoly",
            "params": [
                {
                    "name": "resourceType",
                    "description": "",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 141,
            "description": "Play a Monument card.\n<pre>\nPre-condition: It is the player's turn, the player has 10 victory points\n(counting points from Monument cards), and the player has a Monument card.\nPost-condition: The player receives a victory point.\n(async!)\n</pre>",
            "itemtype": "method",
            "name": "monument",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 155,
            "description": "Offer a trade to another player.\n<pre>\nPre-condition: It is the player's turn or the offer is being made to the player\nwhose turn it is. The player has the resources being offered.\nPost-condition: An offer has been made to another player.\n(async!)\n</pre>",
            "itemtype": "method",
            "name": "offerTrade",
            "params": [
                {
                    "name": "cardsOffered",
                    "description": "",
                    "type": "CardParams"
                },
                {
                    "name": "playerToTradeWith",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 171,
            "description": "Accept a trade offer.\n<pre>\nPre-condition: The player made the trade offer and if accepting has the resources\nto trade. It is either his/her turn or the turn of the player he/she is trading with.\nPost-condition: If accepted, the players have swapped the selected resource cards.\nIf rejected, nothing is modified. In either case, the trade offer is removed.\n(async!)\n</pre>",
            "itemtype": "method",
            "name": "acceptTrade",
            "params": [
                {
                    "name": "willAccept",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/Player.js",
            "line": 187,
            "description": "Discard cards when a 7 is rolled.\n<pre>\nPre-condition: A 7 has been rolled (the client model state is 'discarding'), the player has more than 7 cards,\nand the player has the cards he/she selected to discard.\nPost-condition: The player has discarded half of his/her cards.\n(async!)\n</pre>",
            "itemtype": "method",
            "name": "discardCards",
            "params": [
                {
                    "name": "cardsToDiscard",
                    "description": "",
                    "type": "CardParams"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "board.Player",
            "module": "catan.model.board",
            "namespace": "board"
        },
        {
            "file": "src/js/model/board/TurnTraker.js",
            "line": 28,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "currentPlayerId",
            "return": {
                "description": "ID of the player whose turn it is",
                "type": "Int"
            },
            "class": "model.TurnTracker",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/TurnTraker.js",
            "line": 40,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getStatus",
            "return": {
                "description": "State of the game (pre game, in-progress, post game)",
                "type": "StatusEnum"
            },
            "class": "model.TurnTracker",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/TurnTraker.js",
            "line": 51,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "isGameOver",
            "return": {
                "description": "True if game is over, false if not.",
                "type": "Boolean"
            },
            "class": "model.TurnTracker",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/TurnTraker.js",
            "line": 63,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "canTradeCards",
            "params": [
                {
                    "name": "playerId",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "True if player can trade cards, false if not",
                "type": "Boolean"
            },
            "class": "model.TurnTracker",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/TurnTraker.js",
            "line": 75,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: The next person in order starts their turn. (async!)\n</pre>\nNotifies system that a player's turn is finished",
            "itemtype": "method",
            "name": "finishTurn",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.TurnTracker",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/board/TurnTraker.js",
            "line": 88,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Players will be given the resources deserved from that roll. ClientModel's state is either \"robbing\", \"discarding\", or \"playing\" (async!)\n</pre>\nRolls two \"dice\" using a random number generator.",
            "itemtype": "method",
            "name": "rollDice",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.TurnTracker",
            "module": "catan.model.board",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Chat.js",
            "line": 23,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: The message is sent to all players (async!)\n</pre>",
            "itemtype": "method",
            "name": "sendChat",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "user",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "class": "model.Chat",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameRoom.js",
            "line": 25,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>\nGets a list of all games on the server",
            "itemtype": "method",
            "name": "getAllGames",
            "return": {
                "description": "An array of all games and their descriptions",
                "type": "Array"
            },
            "class": "model.GameRoom",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameRoom.js",
            "line": 36,
            "description": "<pre>\nPre-condition:NONE\nPost-condition:NONE\n</pre>\nLists all types of automatic players",
            "itemtype": "method",
            "name": "listAi",
            "return": {
                "description": "List of the names of all types of AI",
                "type": "Array"
            },
            "class": "model.GameRoom",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameRoom.js",
            "line": 53,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: If the credentials are correct, the user is logged in (async!)\n</pre>\nCheck if user can login",
            "itemtype": "method",
            "name": "login",
            "params": [
                {
                    "name": "username",
                    "description": "case-sensitive username",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "case-sensitive password",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Callback function. cb(success, error)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.GameRoom",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameRoom.js",
            "line": 69,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: If the username is unique and the password is non-empty, a\nnew user is created.\n</pre>\nFirst checks if username is unique and password is non-empty. If so, it creates a user.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "username",
                    "description": "Requested username",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "Register with password",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "Callback function. cb(success, error)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.GameRoom",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameRoom.js",
            "line": 86,
            "description": "<pre>\nPre-condition: Username is valid, gameId is valid. Game has open spots\nPost-condition: User is added to the game roster. (async!)\n</pre>\nJoins a user to a game",
            "itemtype": "method",
            "name": "joinGame",
            "params": [
                {
                    "name": "username",
                    "description": "Username",
                    "type": "String"
                },
                {
                    "name": "gameId",
                    "description": "ID corresponding to a game",
                    "type": "Int"
                },
                {
                    "name": "callback",
                    "description": "Callback function (success?, error)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.GameRoom",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameRoom.js",
            "line": 102,
            "description": "<pre>\nPre-condition: gameName is non-empty and unique\nPost-condition: New, empty game is created (async!)\n</pre>\nCreates a new game",
            "itemtype": "method",
            "name": "createGame",
            "params": [
                {
                    "name": "gameName",
                    "description": "Name of the game",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback function cb(success?, error)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.GameRoom",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameRoom.js",
            "line": 117,
            "description": "<pre>\nPre-condition: aiType is a valid AI name. Game has open spots.\nPost-condition: An AI player is added to the game roster (async!)\n</pre>\nAdds an AI player to the game",
            "itemtype": "method",
            "name": "addAi",
            "params": [
                {
                    "name": "aiType",
                    "description": "Name of an ai type. See GameRoom.listAi()",
                    "type": "String"
                },
                {
                    "name": "gameId",
                    "description": "ID of the game",
                    "type": "Int"
                },
                {
                    "name": "cb",
                    "description": "Callback function cb(success?, error)",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.GameRoom",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameTable.js",
            "line": 21,
            "description": "The game log",
            "itemtype": "property",
            "name": "log",
            "type": "{model.Log}",
            "class": "model.GameTable",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameTable.js",
            "line": 28,
            "description": "The game chat",
            "itemtype": "property",
            "name": "chat",
            "type": "{model.Chat}",
            "class": "model.GameTable",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameTable.js",
            "line": 35,
            "description": "The game board",
            "itemtype": "property",
            "name": "gameBoard",
            "type": "{model.Chat}",
            "class": "model.GameTable",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/GameTable.js",
            "line": 43,
            "description": "<pre>\nPre-condition: obj is a valid game model object\nPost-condition: updates all children models\n</pre>\nLoads the JSON response from the server and updates the entire model structure to match the updates",
            "itemtype": "method",
            "name": "loadJsonGameModel",
            "params": [
                {
                    "name": "obj",
                    "description": "The JSON response",
                    "type": "Object"
                },
                {
                    "name": "success",
                    "description": "Callback on success",
                    "type": "Function"
                },
                {
                    "name": "err",
                    "description": "Callback on error",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Nothing",
                "type": "Void"
            },
            "class": "model.GameTable",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Log.js",
            "line": 28,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "mostRecentEntry",
            "return": {
                "description": "Log entry containing detailed log info.",
                "type": "Object"
            },
            "class": "model.Log",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 22,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "mostRecentEntry",
            "params": [
                {
                    "name": "username",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "200 if logged in, 400 if not",
                "type": "Int"
            },
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 36,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "username",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 51,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: NONE\n</pre>",
            "itemtype": "method",
            "name": "getAllGames",
            "return": {
                "description": "Array of games",
                "type": "Object[]"
            },
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 63,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; gives JSON Object containing new game information.\n</pre>",
            "itemtype": "method",
            "name": "createGame",
            "params": [
                {
                    "name": "randomTiles",
                    "description": "Random Tiles",
                    "type": "Boolean"
                },
                {
                    "name": "randomNumbers",
                    "description": "Random Numbers",
                    "type": "Boolean"
                },
                {
                    "name": "randomPorts",
                    "description": "Random Ports",
                    "type": "Boolean"
                },
                {
                    "name": "gameName",
                    "description": "Game name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 80,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; gives JSON Object containing game join info: joined, not joined, etc...\n</pre>",
            "itemtype": "method",
            "name": "joinGame",
            "params": [
                {
                    "name": "color",
                    "description": "Color of player to join game",
                    "type": "String"
                },
                {
                    "name": "playerId",
                    "description": "ID of player to join",
                    "type": "Int"
                },
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 95,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; gives JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "getModel",
            "params": [
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 107,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; gives JSON Object containing a fresh, new game model.\n</pre>",
            "itemtype": "method",
            "name": "resetGame",
            "params": [
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 119,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; gives entire game model\n</pre>",
            "itemtype": "method",
            "name": "sendCommands",
            "params": [
                {
                    "name": "commands",
                    "description": "Array of command objects representing user activity",
                    "type": "Object[]"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 132,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; gives JSON Array of objects containing game commands\n</pre>",
            "itemtype": "method",
            "name": "getCommands",
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 143,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; gives JSON Object containing success or failure.\n</pre>",
            "itemtype": "method",
            "name": "addAI",
            "params": [
                {
                    "name": "type",
                    "description": "Type of AI",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 156,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; gives array of strings representing types of AI's\n</pre>",
            "itemtype": "method",
            "name": "listAI",
            "params": [
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 168,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; JSON Object containing success/failure of request.\n</pre>",
            "itemtype": "method",
            "name": "changeLogLevel",
            "return": {
                "description": ""
            },
            "params": [
                {
                    "name": "level",
                    "description": "Representation of log level",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 182,
            "description": "<pre>\n * Pre-condition: NONE\n * Post-condition: Callback is called; JSON Object containing entire game model.\n * </pre>\n * @method sendChat\n * @param {int} playerId ID of player\n * @param {String} content content of message\n * @param {function} cb callback\n *",
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 196,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "rollNumber",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player",
                    "type": "Int"
                },
                {
                    "name": "number",
                    "description": "Number of roll",
                    "type": "Int"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 209,
            "description": "<pre>\nPre-condition: Player is not him/herself.\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "robPlayer",
            "params": [
                {
                    "name": "thiefPlayerId",
                    "description": "ID of robbing player",
                    "type": "Int"
                },
                {
                    "name": "victimPlayerId",
                    "description": "ID of robbed victim",
                    "type": "Int"
                },
                {
                    "name": "location",
                    "description": "New position of the robber",
                    "type": "HexLocation"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 223,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called;\n</pre>",
            "itemtype": "method",
            "name": "finishTurn",
            "params": [
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 235,
            "description": "<pre>\nPre-condition: Player ID is allowed to buy dev card\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "buyDevCard",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player",
                    "type": "Int"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 249,
            "description": "<pre>\nPre-condition: Player has card\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "yearOfPlenty",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player playing card",
                    "type": "Int"
                },
                {
                    "name": "resourceOne",
                    "description": "Type of card",
                    "type": "Int"
                },
                {
                    "name": "resourceTwo",
                    "description": "Type of card",
                    "type": "Int"
                },
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 264,
            "description": "<pre>\nPre-condition: Roads can be built at specified locations.\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "roadBuilding",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player",
                    "type": "Int"
                },
                {
                    "name": "roadLocations",
                    "description": "Array of two Edge objects representing the two roads to be built.",
                    "type": "Edge[]"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 278,
            "description": "<pre>\nPre-condition: Player has card\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "solider",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player playing solider",
                    "type": "Int"
                },
                {
                    "name": "victimId",
                    "description": "ID of player who the card-playing user selects to steal one resource.",
                    "type": "Int"
                },
                {
                    "name": "newRobberLocation",
                    "description": "New location of soldier card",
                    "type": "HexLocation"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Funtion"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 292,
            "description": "<pre>\nPre-condition: Player has card\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "monopoly",
            "params": [
                {
                    "name": "resource",
                    "description": "ID of player who is monopolizing",
                    "type": "Int"
                },
                {
                    "name": "playerId",
                    "description": "Type of resource being monopolized",
                    "type": "Int"
                },
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 305,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "monument",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player with monument\n * @param {function} cb callback",
                    "type": "Id"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 317,
            "description": "<pre>\nPre-condition: The specified building site is legal to be built on.\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "buildRoad",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player building road",
                    "type": "Int"
                },
                {
                    "name": "roadLocation",
                    "description": "Location of road to be built",
                    "type": "EdgeLocation"
                },
                {
                    "name": "isFree",
                    "description": "True if free, false if not",
                    "type": "Boolean"
                },
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 331,
            "description": "<pre>\nPre-condition: The specified building site is legal to be built on.\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "buildSettlement",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player building settlement",
                    "type": "Int"
                },
                {
                    "name": "location",
                    "description": "Location of settlement to be built",
                    "type": "VertexLocation"
                },
                {
                    "name": "isFree",
                    "description": "True if free, false if not",
                    "type": "Boolean"
                },
                {
                    "name": "cb",
                    "description": "callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 345,
            "description": "<pre>\nPre-condition: There is a settlement owned by that player at specified location. Player has resources.\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "buildCity",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player building city",
                    "type": "Int"
                },
                {
                    "name": "location",
                    "description": "Location of city to be built",
                    "type": "VertexLocation"
                },
                {
                    "name": "isFree",
                    "description": "True if free, false if not",
                    "type": "Boolean"
                },
                {
                    "name": "cb",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 359,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "offerTrade",
            "params": [
                {
                    "name": "offeringPlayerId",
                    "description": "ID of player offering trade",
                    "type": "Int"
                },
                {
                    "name": "offeredPlayerId",
                    "description": "ID of player who is being offered to",
                    "type": "Int"
                },
                {
                    "name": "resourceType",
                    "description": "Type of resource being offered.",
                    "type": "Int"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 373,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "acceptTrade",
            "params": [
                {
                    "name": "playerId",
                    "description": "ID of player accepting/rejecting trade",
                    "type": "Int"
                },
                {
                    "name": "playerAccepts",
                    "description": "True if player accepts, false if not",
                    "type": "Boolean"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/Proxy.js",
            "line": 386,
            "description": "<pre>\nPre-condition: NONE\nPost-condition: Callback is called; JSON Object containing entire game model.\n</pre>",
            "itemtype": "method",
            "name": "discardCards",
            "params": [
                {
                    "name": "playerId",
                    "description": "Id of player",
                    "type": "ID"
                },
                {
                    "name": "discardedResources",
                    "description": "Array of cardtypes being discarded",
                    "type": "Int[]"
                }
            ],
            "class": "model.Proxy",
            "module": "catan.model",
            "namespace": "model"
        },
        {
            "file": "src/js/model/clientmodel.js",
            "line": 25,
            "description": "This is called to fetch the game state from the server the very first time.\nIt should: 1) fetch the game state JSON from the server, 2) update the client model with the\nreturned data, 3) notify all client model listeners that the model has changed, and 4) invoke\nthe success callback function with the object received from the server.",
            "itemtype": "method",
            "name": "initFromServer",
            "params": [
                {
                    "name": "success",
                    "description": "- A callback function that is called after the game state has been fetched from the server and the client model updated. This function is passed a single parameter which is the game state object received from the server.",
                    "type": "Function"
                }
            ],
            "class": "models.ClientModel",
            "module": "catan.models",
            "namespace": "models"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/comms_box/CommView.js",
            "line": 65,
            "description": "Sets new content for the display",
            "itemtype": "method",
            "name": "resetLines",
            "params": [
                {
                    "name": "lines",
                    "description": "a list of objects with three attributes: source(the player name attached to the event),\nmessage(the contents of the line), and className(the color of the object)",
                    "type": "Array"
                }
            ],
            "class": "comm.BaseCommView",
            "module": "catan.comm",
            "namespace": "comm"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/comms_box/CommView.js",
            "line": 82,
            "description": "Sets the controller and action for the input element",
            "itemtype": "method",
            "name": "setController",
            "params": [
                {
                    "name": "controller",
                    "description": "The controller",
                    "type": "Object"
                }
            ],
            "class": "comm.BaseCommView",
            "module": "catan.comm",
            "namespace": "comm"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/development_cards/CardOverlay.js",
            "line": 47,
            "description": "Attaches the controller to the view and builds the view on the page.",
            "itemtype": "method",
            "name": "setController",
            "params": [
                {
                    "name": "controller",
                    "description": "",
                    "type": "devCards.Controller"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardView",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/development_cards/CardOverlay.js",
            "line": 60,
            "description": "Enables a single card",
            "itemtype": "method",
            "name": "setCardEnabled",
            "params": [
                {
                    "name": "card",
                    "description": "the card to update (from catan.definitions.CardTypes)",
                    "type": "String"
                },
                {
                    "name": "enabled",
                    "description": "whether the player can use the card",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardView",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/development_cards/CardOverlay.js",
            "line": 74,
            "description": "Sets the amount for a single card",
            "itemtype": "method",
            "name": "updateAmount",
            "params": [
                {
                    "name": "value",
                    "description": "the value to update (from catan.definitions.CardTypes)",
                    "type": "String"
                },
                {
                    "name": "amount",
                    "description": "the total number of cards of that type the player has (both old and new cards)",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardView",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/development_cards/CardOverlay.js",
            "line": 85,
            "description": "Resets the overlay view",
            "itemtype": "method",
            "name": "clearView",
            "return": {
                "description": "void"
            },
            "class": "devCards.DevCardView",
            "module": "catan.devCards",
            "namespace": "devCards"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js",
            "line": 39,
            "description": "Attaches the controller to the view and builds the view on the page.",
            "itemtype": "method",
            "name": "setController",
            "params": [
                {
                    "name": "controller",
                    "description": "",
                    "type": "discard.Controller"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "discard.DiscardView",
            "module": "catan.discard",
            "namespace": "discard"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js",
            "line": 52,
            "description": "Sets the maximum amount of a resource that the player can discard",
            "itemtype": "method",
            "name": "setResourceMaxAmount",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource to discard (see catan.definitions.ResourceTypes)",
                    "type": "String"
                },
                {
                    "name": "amt",
                    "description": "the max amount you can discard of the resource",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "discard.DiscardView",
            "module": "catan.discard",
            "namespace": "discard"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js",
            "line": 63,
            "description": "Enables/disables increasing or decreasing for a single resource.",
            "itemtype": "method",
            "name": "setResourceAmountChangeEnabled",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource to discard (see catan.definitions.ResourceTypes)",
                    "type": "String"
                },
                {
                    "name": "increase",
                    "description": "whether you can increase the amount displayed",
                    "type": "Boolean"
                },
                {
                    "name": "decrease",
                    "description": "whether you can decrease the amount displayed",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "discard.DiscardView",
            "module": "catan.discard",
            "namespace": "discard"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js",
            "line": 80,
            "description": "Sets the amount displayed for a single resource.",
            "itemtype": "method",
            "name": "setResourceAmount",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource to discard (see catan.definitions.ResourceTypes)",
                    "type": "String"
                },
                {
                    "name": "amount",
                    "description": "the current amount to display",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "discard.DiscardView",
            "module": "catan.discard",
            "namespace": "discard"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js",
            "line": 93,
            "description": "Enables or disabled the discard button.",
            "itemtype": "method",
            "name": "setDiscardButtonEnabled",
            "params": [
                {
                    "name": "shouldEnable",
                    "description": "whether or not a player can discard yet",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "discard.DiscardView",
            "module": "catan.discard",
            "namespace": "discard"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/discard/DiscardOverlay.js",
            "line": 106,
            "description": "Sets the state message, which indicates how many cards a player has set to discard, and how many remain to set.",
            "itemtype": "method",
            "name": "setStateMessage",
            "params": [
                {
                    "name": "message",
                    "description": "the message to display",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "discard.DiscardView",
            "module": "catan.discard",
            "namespace": "discard"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapOverlay.js",
            "line": 115,
            "description": "Shows a modal overlay of the map.",
            "itemtype": "method",
            "name": "showModal",
            "params": [
                {
                    "name": "type",
                    "description": "the type of the item to place: \"Robber\", \"Soldier\", \"City\", \"Settlement\", \"Road\".",
                    "type": "String"
                }
            ],
            "class": "map.MapOverlay",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapOverlay.js",
            "line": 154,
            "description": "Closes the overlay.",
            "itemtype": "method",
            "name": "closeModal",
            "class": "map.MapOverlay",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 179,
            "itemtype": "property",
            "name": "x",
            "type": "integer",
            "class": "map.Point",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 184,
            "itemtype": "property",
            "name": "y",
            "type": "integer",
            "class": "map.Point",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 210,
            "description": "The location of the vertex on the hex (allowed values:\"E\" , \"W\")",
            "itemtype": "property",
            "name": "dir",
            "type": "string",
            "class": "map.VertexLoc",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 244,
            "description": "The location of the edge on the hex (allowed values:\"SW\", \"S\", \"SE\")",
            "itemtype": "property",
            "name": "dir",
            "type": "string",
            "class": "map.EdgeLoc",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 273,
            "description": "The amount of rotation on the port - specifically, which side it faces:\n 0 - NW\n 1 - N\n 2 - NE\n 3 - SE\n 4 - S\n 5 - SW",
            "itemtype": "property",
            "name": "rotation",
            "type": "integer",
            "class": "map.PortLoc",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 901,
            "itemtype": "property",
            "name": "controller",
            "type": "MapController",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1006,
            "description": "This starts the piece placement process - it has no knowledge of the model, so you must tell it the piece type and color.\nColor can be omitted and has no effect if it's the robber\nAfter calling this, the view will use the controller's \"onDrag\" and \"onDrop\" methods to check whether a piece can be placed.",
            "params": [
                {
                    "name": "objectType",
                    "description": "The type of piece to be placed (\"city\",\"settlement\",\"road\",\"robber\")",
                    "type": "String"
                },
                {
                    "name": "color",
                    "description": "The color of the piece you want to place. (Omit for \"robber\".)",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "startDrop",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1069,
            "description": "This cancels the piece placement process.",
            "itemtype": "method",
            "name": "cancelDrop",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1078,
            "description": "This causes the pieces on the board to be drawn.",
            "itemtype": "method",
            "name": "drawPieces",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1087,
            "description": "This adds a hex to the board.",
            "params": [
                {
                    "name": "loc",
                    "description": "The location to put the hex. This should only be called at most once per hex location",
                    "type": "HexLocation"
                },
                {
                    "name": "type",
                    "description": "The type of the hex: a resource(\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\"), \"desert\", or \"water\"",
                    "type": "String"
                },
                {
                    "name": "noDraw",
                    "description": "Optional - if omitted or false, the view is not redrawn.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "addHex",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1099,
            "description": "This adds a number to the board.",
            "params": [
                {
                    "name": "loc",
                    "description": "The location to put the number. This should only be called at most once per hex location",
                    "type": "HexLocation"
                },
                {
                    "name": "number",
                    "description": "The number to put on the map",
                    "type": "Integer"
                },
                {
                    "name": "noDraw",
                    "description": "Optional - if omitted or false, the view is not redrawn.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "addNumber",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1111,
            "description": "This adds a port to the board.",
            "params": [
                {
                    "name": "loc",
                    "description": "The location to put the port. This should only be called only once per port",
                    "type": "PortLoc"
                },
                {
                    "name": "type",
                    "description": "The port type: a resource(\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\"), or \"three\"",
                    "type": "String"
                },
                {
                    "name": "noDraw",
                    "description": "Optional - if omitted or false, the view is not redrawn.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "addPort",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1123,
            "description": "This places the robber on the board. Subsequent calls move the robber.",
            "params": [
                {
                    "name": "loc",
                    "description": "The location to put the robber.",
                    "type": "HexLocation"
                },
                {
                    "name": "noDraw",
                    "description": "Optional - if omitted or false, the view is not redrawn.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "placeRobber",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1136,
            "description": "This adds a settlement to the board.",
            "params": [
                {
                    "name": "loc",
                    "description": "The location to put the settlement.",
                    "type": "VertexLoc"
                },
                {
                    "name": "playerColor",
                    "description": "The player color",
                    "type": "String"
                },
                {
                    "name": "noDraw",
                    "description": "Optional - if omitted or false, the view is not redrawn.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "placeSettlement",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1152,
            "description": "This adds a city to the board.",
            "params": [
                {
                    "name": "loc",
                    "description": "The location to put the city.",
                    "type": "VertexLoc"
                },
                {
                    "name": "playerColor",
                    "description": "The player color",
                    "type": "String"
                },
                {
                    "name": "noDraw",
                    "description": "Optional - if omitted or false, the view is not redrawn.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "placeCity",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/MapView.js",
            "line": 1167,
            "description": "This adds a road to the board.",
            "params": [
                {
                    "name": "loc",
                    "description": "The location to put the road.",
                    "type": "EdgeLoc"
                },
                {
                    "name": "playerColor",
                    "description": "The player color",
                    "type": "String"
                },
                {
                    "name": "noDraw",
                    "description": "Optional - if omitted or false, the view is not redrawn.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "placeRoad",
            "class": "map.MapView",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/map/RobberOverlay.js",
            "line": 58,
            "description": "This sets the available players to rob: an array of objects of the form \n* { color:String,\n* \tname:String,\n* \tplayerNum:int,\n* \tcards:int}",
            "itemtype": "method",
            "name": "setPlayerInfo",
            "params": [
                {
                    "name": "info",
                    "description": "",
                    "type": "Object[]"
                }
            ],
            "class": "map.RobberOverlay",
            "module": "catan.map",
            "namespace": "map"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 45,
            "description": "Using this method sets the location on the hex and the right functions on all the edges and vertexes it has\nI don't think you'll have to use this...",
            "itemtype": "method",
            "name": "setLocation",
            "params": [
                {
                    "name": "location",
                    "description": "- the new location of the hex",
                    "type": "hexgrid.HexLocation"
                }
            ],
            "class": "hexgrid.BasicHex",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 64,
            "description": "Use this to access the edge. You should never have to set new edge objects post initialization. So not setter.",
            "itemtype": "method",
            "name": "getEdge",
            "params": [
                {
                    "name": "edgeDirection",
                    "description": "- which of the hex to fetch",
                    "type": "hexgrid.EdgeDirection"
                }
            ],
            "return": {
                "description": "The edge instance",
                "type": "hexgrid.BaseContainer"
            },
            "class": "hexgrid.BasicHex",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 75,
            "description": "Use this to access the edge. You should never have to set new edge objects post initialization. So not setter.",
            "itemtype": "method",
            "name": "getVertex",
            "params": [
                {
                    "name": "vertexDirection",
                    "description": "- which of the hex to fetch",
                    "type": "hexgrid.VertexDirection"
                }
            ],
            "return": {
                "description": "The edge instance",
                "type": "hexgrid.BaseContainer"
            },
            "class": "hexgrid.BasicHex",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 200,
            "description": "This calls the HexGrid conructor with the right arguements given a radius to \n create a regular hexgrid, with the reference 0,0 pointing to the middle",
            "itemtype": "method",
            "name": "getRegular",
            "static": 1,
            "params": [
                {
                    "name": "radius",
                    "description": "The radius of the map, including the center. \n                       It's given in the json of the map. T\n                       The width of the map in hexes is equal to (2 * radius - 1)",
                    "type": "Integer"
                },
                {
                    "name": "hex",
                    "description": "A constructor of your custom hex class that you use to instantiate new hexes.\n                More copies are instantiated using the hex(.prototype).constructor property. So make sure you have it!\n                This should be your own custom hex class, which in it's constructor call the base hex constructor",
                    "type": "hexgrid.BasicHex"
                }
            ],
            "return": {
                "description": "A newly initialized HexGrid",
                "type": "hexgrid.HexGrid"
            },
            "class": "hexgrid.HexGrid",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 218,
            "description": "Returns an array of all the hexes. It's useful in order to iterate over them (using [].map)",
            "itemtype": "method",
            "name": "getHexes",
            "return": {
                "description": "hexgrid.BasicHex [Array]"
            },
            "class": "hexgrid.HexGrid",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 245,
            "description": "Returns the hex at the give spot. If you used the 'getRegular' function to make this hexgrid,\n the hexLocation (0,0) will return the hex in the middle of the hexgrid.",
            "itemtype": "method",
            "name": "getHex",
            "params": [
                {
                    "name": "hexLocation",
                    "description": "- the location of the hex you want.",
                    "type": "hexgrid.HexLocation"
                }
            ],
            "return": {
                "description": "",
                "type": "hexgrid.BasicHex"
            },
            "class": "hexgrid.HexGrid",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 284,
            "description": "Returns true if there is a hex at the given location",
            "itemtype": "method",
            "name": "hasHex",
            "params": [
                {
                    "name": "hexLocation",
                    "description": "",
                    "type": "hexgrid.HexLocation"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hexgrid.HexGrid",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 294,
            "description": "Returns a list of hex locations that point to all the hexs \ncurrently stored in the grid",
            "itemtype": "method",
            "name": "getAllLocations",
            "return": {
                "description": "",
                "type": "[hexgrid.HexLocation]"
            },
            "class": "hexgrid.HexGrid",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 324,
            "description": "This method depends on the class derived from BaseContainer for a Edge implementing the method 'isOccupied'\nreturning true iff the container has a road",
            "itemtype": "method",
            "name": "getEdges",
            "return": {
                "description": "all the edges that have roads in the hexgrid - the return type is actually your custom edge class",
                "type": "[hexgrid.BaseContainer]"
            },
            "class": "hexgrid.HexGrid",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 335,
            "description": "This method depends on the class derived from BaseContainer for a Vertex implementing the method 'isOccupied'\nreturning true iff the container has a city/settlement.\nNote, you'll still have to a method on the edge/vertex itself to get the city or settlement from it.",
            "itemtype": "method",
            "name": "getVertexes",
            "return": {
                "description": "All the vertexes that have cities/settlements in the hexgrid - the return type is actually your custom vertex class",
                "type": "[hexgrid.BaseContainer]"
            },
            "class": "hexgrid.HexGrid",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 369,
            "description": "This represents a location of a hex on a hex grid.",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "otherLocation",
                    "description": "",
                    "type": "hexgrid.HexLocation"
                }
            ],
            "return": {
                "description": "boolean Returns true if the other location has the same x,y"
            },
            "class": "hexgrid.HexLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 380,
            "description": "This represents a location of a hex on a hex grid.",
            "itemtype": "method",
            "name": "getNeighborLocation",
            "params": [
                {
                    "name": "hexDirection",
                    "description": "",
                    "type": "[HexDirection]"
                }
            ],
            "return": {
                "description": "hexgrid.HexLocation Returns a location next to this one, in the direction of the 'hexDirection' given"
            },
            "class": "hexgrid.HexLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 453,
            "description": "Get the next logical location by traveling about the center ofthe hex in a clockwise direction",
            "itemtype": "method",
            "name": "rotateAboutHexCW",
            "return": {
                "description": "The next location CW",
                "type": "hexgrid.BaseLocation"
            },
            "class": "hexgrid.BaseLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 464,
            "description": "Get the next logical location by traveling about the center of the hex in a counter-clockwise direction",
            "itemtype": "method",
            "name": "rotateAboutHexCCW",
            "return": {
                "description": "[Array] The next location CCW",
                "type": "hexgrid.BaseLocation"
            },
            "class": "hexgrid.BaseLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 476,
            "description": "Edge and VertexLocation's have class-specific implementations\n\nThis function should return all Locations that refer to this spot on the map",
            "itemtype": "method",
            "name": "getEquivalenceGroup",
            "return": {
                "description": "[Array] A list of equivalent locations including this one",
                "type": "hexgrid.BaseLocation"
            },
            "class": "hexgrid.BaseLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 486,
            "description": "Abstract function to be overridden in child-class",
            "itemtype": "method",
            "name": "getNeighborVertexes",
            "return": {
                "description": "[Array] vertexes touching this location",
                "type": "hexgrid.VertexLocation"
            },
            "class": "hexgrid.BaseLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 494,
            "description": "Abstract function to be overridden in child-class",
            "itemtype": "method",
            "name": "getConnectedEdges",
            "return": {
                "description": "[Array] edges touching this locaiton",
                "type": "hexgrid.VertexLocation"
            },
            "class": "hexgrid.BaseLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 507,
            "description": "Returns a unique string id for this location\n        All locations in any equivalence group will have the same id string.",
            "itemtype": "method",
            "name": "getIDString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "hexgrid.BaseLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 543,
            "description": "This function returns this Edge location as well as the edge location for\nthe other hex that this edge touches.",
            "itemtype": "method",
            "name": "getEquivalenceGroup",
            "return": {
                "description": "[Array] The list of all edge locations that this \nobject is equivalent to (reflexive). Size = 2.",
                "type": "hexgrid.EdgeLocation"
            },
            "class": "hexgrid.EdgeLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 621,
            "description": "This function returns this VertexLocation as well as the VertexLocation for\nthe other 2 hexes that this VertexLocation touches.",
            "itemtype": "method",
            "name": "getEquivalenceGroup",
            "return": {
                "description": "[Array] The list of all VertexLocation that this \nobject is equivalent to (reflexive). Size = 3.",
                "type": "hexgrid.VertexLocation"
            },
            "class": "hexgrid.VertexLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 658,
            "description": "Returns the three edge locations connected to this vertex location",
            "itemtype": "method",
            "name": "getConnectedEdges",
            "return": {
                "description": "[Array]",
                "type": "hexgrid.EdgeLocation"
            },
            "class": "hexgrid.VertexLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 666,
            "description": "An alias for '.getConnectedEdges' - you could use it in tree traversal?",
            "itemtype": "method",
            "name": "getConnectedEdges",
            "return": {
                "description": "[Array]",
                "type": "hexgrid.EdgeLocation"
            },
            "class": "hexgrid.VertexLocation",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/model/hexgrid.js",
            "line": 688,
            "description": "This function should return true if this edge or vertex is occupied. (ie it contains a city, settlement or edge)",
            "itemtype": "method",
            "name": "isOccupied",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hexgrid.BaseContainer",
            "module": "catan.models",
            "submodule": "catan.models.hexgrid",
            "namespace": "hexgrid"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/points/GameOverOverlay.js",
            "line": 33,
            "itemtype": "method",
            "name": "setWinner",
            "params": [
                {
                    "name": "name",
                    "description": "the name of the winner",
                    "type": "String"
                },
                {
                    "name": "isYou",
                    "description": "whether the client player is the winner",
                    "type": "Boolean"
                }
            ],
            "class": "misc.GameFinishedView",
            "module": "catan.misc",
            "namespace": "misc"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/points/PointsView.js",
            "line": 48,
            "description": "Sets the number of points the player has",
            "itemtype": "method",
            "name": "setPoints",
            "params": [
                {
                    "name": "points",
                    "description": "The number of points the player has",
                    "type": "Integer"
                }
            ],
            "class": "points.PointView",
            "module": "catan.points",
            "namespace": "points"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/resources/ResourcesView.js",
            "line": 46,
            "description": "Attaches the controller to the view and builds the view on the page.",
            "itemtype": "method",
            "name": "setController",
            "params": [
                {
                    "name": "controller",
                    "description": "the controller",
                    "type": "ResourceController"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "resources.ResourceBarView",
            "module": "catan.resources",
            "namespace": "resources"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/resources/ResourcesView.js",
            "line": 57,
            "description": "Updates the display for an element of the resource bar",
            "itemtype": "method",
            "name": "updateAmount",
            "params": [
                {
                    "name": "value",
                    "description": "the element to change (\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\",\"Roads\",\"Settlements\",\"Cities\",\"BuyCard\",\"DevCards\",\"Soldiers\"). These constants are defined in StudentDefinitions.js",
                    "type": "String"
                },
                {
                    "name": "amount",
                    "description": "the display amount (can be undefined)",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "resources.ResourceBarView",
            "module": "catan.resources",
            "namespace": "resources"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/resources/ResourcesView.js",
            "line": 70,
            "description": "Enables or disables an element of the resource bar",
            "itemtype": "method",
            "name": "setActionEnabled",
            "params": [
                {
                    "name": "value",
                    "description": "the element to change (\"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\",\"Roads\",\"Settlements\",\"Cities\",\"BuyCard\",\"DevCards\",\"Soldiers\"). These constants are defined in StudentDefinitions.js",
                    "type": "String"
                },
                {
                    "name": "enabled",
                    "description": "whether to enable the button",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "resources.ResourceBarView",
            "module": "catan.resources",
            "namespace": "resources"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/roll/RollOverlay.js",
            "line": 73,
            "description": "Updates the countdown message",
            "itemtype": "method",
            "name": "changeMessage",
            "params": [
                {
                    "name": "message",
                    "description": "the new countdown message",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "roll.RollView",
            "module": "catan.roll",
            "namespace": "roll"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/roll/RollResultOverlay.js",
            "line": 38,
            "description": "sets the amount to display after a roll.",
            "itemtype": "method",
            "name": "setAmount",
            "params": [
                {
                    "name": "amount",
                    "description": "the amount to display",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "roll.RollResultView",
            "module": "catan.roll",
            "namespace": "roll"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/AcceptOverlay.js",
            "line": 84,
            "description": "Displays the name of the player that offered the trade.",
            "itemtype": "method",
            "name": "setPlayerName",
            "params": [
                {
                    "name": "playerName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "domestic.AcceptView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/AcceptOverlay.js",
            "line": 93,
            "description": "Enables or disables accepting a trade",
            "itemtype": "method",
            "name": "setAcceptEnabled",
            "params": [
                {
                    "name": "enabled",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "domestic.AcceptView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/AcceptOverlay.js",
            "line": 108,
            "description": "Adds a resource to the display (what the player will have to give up)",
            "itemtype": "method",
            "name": "addGiveResource",
            "params": [
                {
                    "name": "resource",
                    "description": "the element to display (a resource: \"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                },
                {
                    "name": "amount",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "domestic.AcceptView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/AcceptOverlay.js",
            "line": 119,
            "description": "Adds a resource to the display (what the player will receive from the offer)",
            "itemtype": "method",
            "name": "addGetResource",
            "params": [
                {
                    "name": "resource",
                    "description": "the element to display (a resource: \"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                },
                {
                    "name": "amount",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "domestic.AcceptView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 43,
            "description": "Attaches the controller to the view and builds the view on the page.",
            "itemtype": "method",
            "name": "setController",
            "params": [
                {
                    "name": "controller",
                    "description": "",
                    "type": "domestic.Controller"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 54,
            "description": "Sets the opponents to trade with for the player in the view. \nThis should be called on initializing the controller, and only called once.",
            "itemtype": "method",
            "name": "setPlayers",
            "params": [
                {
                    "name": "players",
                    "description": "The player's three opponents. Each must be of the form\n\t\t \t{\n\t\t\t\tname: the name of the player,\n\t\t\t\tcolor: the player's game color,\n\t\t\t\tindex: the gameplay index of the player\n\t\t\t}",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 71,
            "description": "Turns on or off the ability to trade resources",
            "itemtype": "method",
            "name": "setResourceSelectionEnabled",
            "params": [
                {
                    "name": "shouldEnable",
                    "description": "whether the player can trade resources or not",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 90,
            "description": "Turns on or off the ability to select a player to trade with",
            "itemtype": "method",
            "name": "setPlayerSelectionEnabled",
            "params": [
                {
                    "name": "shouldEnable",
                    "description": "whether the player can trade or not",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 103,
            "description": "Turns on or off the ability to set amounts to trade for a reosurce",
            "itemtype": "method",
            "name": "setResourceAmountChangeEnabled",
            "params": [
                {
                    "name": "resource",
                    "description": "the element to change (a resource: \"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                },
                {
                    "name": "shouldIncrease",
                    "description": "whether the player can set more of the resource",
                    "type": "Boolean"
                },
                {
                    "name": "shouldDecrease",
                    "description": "whether the player can set less of the resource",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 120,
            "description": "Displays the amount for a resource",
            "itemtype": "method",
            "name": "setResourceAmount",
            "params": [
                {
                    "name": "resource",
                    "description": "the element to change (a resource: \"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                },
                {
                    "name": "amount",
                    "description": "the current amount the player wants to trade",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 133,
            "description": "Turns on or off the ability to trade",
            "itemtype": "method",
            "name": "setTradeButtonEnabled",
            "params": [
                {
                    "name": "shouldEnable",
                    "description": "whether the player can trade or not",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 146,
            "description": "Displays the message indicating the state of the trade",
            "itemtype": "method",
            "name": "setStateMessage",
            "params": [
                {
                    "name": "message",
                    "description": "the message to display",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/DomesticView.js",
            "line": 156,
            "description": "Resets the view",
            "itemtype": "method",
            "name": "clearTradeView",
            "return": {
                "description": "void"
            },
            "class": "domestic.DomesticView",
            "module": "catan.trade",
            "submodule": "catan.trade.domestic",
            "namespace": "domestic"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 43,
            "description": "Attaches the controller to the view and builds the view on the page.",
            "itemtype": "method",
            "name": "setController",
            "params": [
                {
                    "name": "controller",
                    "description": "",
                    "type": "maritime.Controller"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "maritime.MaritimeView",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 54,
            "description": "Shows all the resources, enabling the ones the player can give, and disabling the ones he can't.",
            "itemtype": "method",
            "name": "showGiveOptions",
            "params": [
                {
                    "name": "resources",
                    "description": "the resources the player can give, based on current ports",
                    "type": "String[]"
                }
            ],
            "class": "maritime.MaritimeView",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 63,
            "description": "Hides all the resources except the one the player has selected.",
            "itemtype": "method",
            "name": "selectGiveOption",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource the player has selected to give (a resource: \"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                },
                {
                    "name": "the",
                    "description": "amount the player has to give of the selected resource",
                    "type": "Int"
                }
            ],
            "class": "maritime.MaritimeView",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 73,
            "description": "Disables all the resources that the player could give",
            "itemtype": "method",
            "name": "hideGiveOptions",
            "class": "maritime.MaritimeView",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 81,
            "description": "Shows all the resources, enabling the ones the player can receive, and disabling the ones he can't.",
            "itemtype": "method",
            "name": "showGetOptions",
            "params": [
                {
                    "name": "resources",
                    "description": "the resources a player can receive",
                    "type": "Array"
                }
            ],
            "class": "maritime.MaritimeView",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 90,
            "description": "Hides all the resources except the one the player has selected.",
            "itemtype": "method",
            "name": "selectGetOption",
            "params": [
                {
                    "name": "resource",
                    "description": "the resource the player has selected to receive (a resource: \"wood\",\"brick\",\"sheep\",\"wheat\",\"ore\")",
                    "type": "String"
                },
                {
                    "name": "the",
                    "description": "amount the player has to receive of the selected resource",
                    "type": "Int"
                }
            ],
            "class": "maritime.MaritimeView",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 100,
            "description": "Disables all the resources that the player could receive",
            "itemtype": "method",
            "name": "hideGetOptions",
            "class": "maritime.MaritimeView",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 108,
            "description": "Enables or disables the button",
            "itemtype": "method",
            "name": "enableTradeButton",
            "params": [
                {
                    "name": "enable",
                    "description": "whether to enable the button or not",
                    "type": "Boolean"
                }
            ],
            "class": "maritime.MaritimeView",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/trading/MaritimeView.js",
            "line": 120,
            "description": "Sets the message on the button",
            "itemtype": "method",
            "name": "setMessage",
            "params": [
                {
                    "name": "message",
                    "description": "the message to display",
                    "type": "String"
                }
            ],
            "class": "maritime.MaritimeView",
            "module": "catan.trade",
            "submodule": "catan.trade.maritime",
            "namespace": "maritime"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/turn_tracker/TrackerView.js",
            "line": 37,
            "description": "attaches the controller to the view and builds the view on the page.",
            "itemtype": "method",
            "name": "setController",
            "params": [
                {
                    "name": "controller",
                    "description": "",
                    "type": "turntracker.Controller"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "turntracker.TurnTrackerView",
            "module": "catan.turntracker",
            "namespace": "turntracker"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/turn_tracker/TrackerView.js",
            "line": 48,
            "description": "sets the color to display for the local player.",
            "itemtype": "method",
            "name": "setClientColor",
            "params": [
                {
                    "name": "color",
                    "description": "the players specified color",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "turntracker.TurnTrackerView",
            "module": "catan.turntracker",
            "namespace": "turntracker"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/turn_tracker/TrackerView.js",
            "line": 64,
            "description": "sets the name and color of a player in the player table.",
            "itemtype": "method",
            "name": "initializePlayer",
            "params": [
                {
                    "name": "playerNumber",
                    "description": "The player to update",
                    "type": "Int"
                },
                {
                    "name": "playerName",
                    "description": "the player's name",
                    "type": "String"
                },
                {
                    "name": "playerColor",
                    "description": "the player's color",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "turntracker.TurnTrackerView",
            "module": "catan.turntracker",
            "namespace": "turntracker"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/turn_tracker/TrackerView.js",
            "line": 78,
            "description": "updates the information for a player in the player table.",
            "itemtype": "method",
            "name": "updatePlayer",
            "params": [
                {
                    "name": "updates",
                    "description": "an object with the updates for a single player",
                    "type": "Object",
                    "props": [
                        {
                            "name": "playerIndex",
                            "description": "the player to update",
                            "type": "Int"
                        },
                        {
                            "name": "score",
                            "description": "the score",
                            "type": "Int"
                        },
                        {
                            "name": "highlight",
                            "description": "whether the player's display box should be highlighted",
                            "type": "Boolean"
                        },
                        {
                            "name": "army",
                            "description": "whether the player has the largest army award",
                            "type": "Boolean"
                        },
                        {
                            "name": "road",
                            "description": "whether the player has the longest road award",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "turntracker.TurnTrackerView",
            "module": "catan.turntracker",
            "namespace": "turntracker"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/turn_tracker/TrackerView.js",
            "line": 97,
            "description": "updates the game state button's message and enabled state",
            "itemtype": "method",
            "name": "updateStateView",
            "params": [
                {
                    "name": "enable",
                    "description": "whether to enable the game state button",
                    "type": "Boolean"
                },
                {
                    "name": "message",
                    "description": "the message to display on the game state button",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "turntracker.TurnTrackerView",
            "module": "catan.turntracker",
            "namespace": "turntracker"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/view_basics/BasicOverlay.js",
            "line": 42,
            "description": "sets the Controller for the view",
            "itemtype": "method",
            "name": "setController",
            "params": [
                {
                    "name": "controller",
                    "description": "",
                    "type": "misc.BaseController"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "misc.BaseOverlay",
            "module": "catan.misc",
            "namespace": "misc"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/view_basics/BasicOverlay.js",
            "line": 56,
            "description": "makes the overlay visible",
            "itemtype": "method",
            "name": "showModal",
            "return": {
                "description": "void"
            },
            "class": "misc.BaseOverlay",
            "module": "catan.misc",
            "namespace": "misc"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/view_basics/BasicOverlay.js",
            "line": 140,
            "description": "makes the overlay invisible",
            "itemtype": "method",
            "name": "closeModal",
            "return": {
                "description": "void"
            },
            "class": "misc.BaseOverlay",
            "module": "catan.misc",
            "namespace": "misc"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/Core.js",
            "line": 16,
            "description": "Returns a newly created object that inherits properties from the\nprototype object p.  It uses the ECMAScript 5 function Object.create() if\nit is defined, and otherwise falls back to an older technique.",
            "itemtype": "method",
            "name": "inherit",
            "params": [
                {
                    "name": "p",
                    "description": "Non-null object. P stands for parent. It's the object to extend",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An object that extends p.",
                "type": "Object"
            },
            "class": "core.Core",
            "module": "core",
            "namespace": "core"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/Core.js",
            "line": 35,
            "description": "This function creates a new enumerated type.  The argument object specifies\nthe names and values of each instance of the class. The return value\nis a constructor function that identifies the new class.  Note, however\nthat the constructor throws an exception: you can't use it to create new\ninstances of the type.  The returned constructor has properties that \nmap the name of a value to the value itself, and also a values array,\na foreach() iterator function",
            "itemtype": "method",
            "name": "enumeration",
            "params": [
                {
                    "name": "namesToValues",
                    "description": "an object with named values"
                }
            ],
            "return": {
                "description": "an enumeration"
            },
            "class": "core.Core",
            "module": "core",
            "namespace": "core"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/Core.js",
            "line": 111,
            "description": "This makes a function that can be set as an onclick, etc.\nIf the inputFunction is a string, the return function when run will\nattempt to find that function on the inputObject. That means that it's \npossible to change the function on the inputObject without having to call\nthis again.\n\nIf the inputFunction is a function and not a string, then the function is stored.\n\nIn both cases, the returned function will take the inputFunction and run it\nwith any references to \"this\" in the inputFunction refering to the inputObject.\nThe args are passed and the \"this\" reference change is done using the \nnative JS function \"apply\".",
            "itemtype": "method",
            "name": "makeAnonymousAction",
            "params": [
                {
                    "name": "inputObject",
                    "description": "The object to be refered to as \"this\" in the inputFunction",
                    "type": "Object"
                },
                {
                    "name": "inputFunction",
                    "description": "The function that needs to be run. If it's a string, when\n\t\t\t\t\t\t\t\t\t\t\t\tit's requested to run it's looked up dynamically on the inputObject",
                    "type": "String || Function"
                },
                {
                    "name": "args",
                    "description": "An array of arguements to be passed to the inputFunction",
                    "type": "Array<Object>"
                }
            ],
            "return": {
                "description": "A function that when run, will run inputFunction.apply(inputObject, args);"
            },
            "class": "core.Core",
            "module": "core",
            "namespace": "core"
        },
        {
            "file": "node_modules/byu-catan/gameplay/js/StudentDefinitions.js",
            "line": 2,
            "description": "Definitions for object names to pass between controllers and views.\nyou reference these by calling catan.definitions.ResourceTypes and the like.",
            "class": "",
            "module": "core",
            "namespace": "core"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: params with param",
            "line": " node_modules/byu-catan/gameplay/js/comms_box/CommView.js:18"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " node_modules/byu-catan/gameplay/js/comms_box/CommView.js:18"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " node_modules/byu-catan/gameplay/js/comms_box/CommView.js:18"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " node_modules/byu-catan/gameplay/js/comms_box/CommView.js:18"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " node_modules/byu-catan/gameplay/js/comms_box/CommView.js:18"
        },
        {
            "message": "Missing item type",
            "line": " src/js/controllers/DomesticController.js:39"
        },
        {
            "message": "Missing item type",
            "line": " src/js/controllers/DomesticController.js:100"
        },
        {
            "message": "Missing item type\n<pre>\n * Pre-condition: NONE\n * Post-condition: Callback is called; JSON Object containing entire game model.\n * </pre>\n * @method sendChat\n * @param {int} playerId ID of player\n * @param {String} content content of message\n * @param {function} cb callback\n *",
            "line": " src/js/model/Proxy.js:182"
        },
        {
            "message": "Missing item type\nDefinitions for object names to pass between controllers and views.\nyou reference these by calling catan.definitions.ResourceTypes and the like.",
            "line": " node_modules/byu-catan/gameplay/js/StudentDefinitions.js:2"
        }
    ]
}